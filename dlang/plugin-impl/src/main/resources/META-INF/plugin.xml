<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude" allow-bundled-update="true">
    <id>net.masterthought.dlanguage</id>
    <name>D Language</name>
    <version>${version}</version>
    <vendor url="https://intellij-dlanguage.github.io/">D Language</vendor>

    <description><![CDATA[
     <img src="https://avatars3.githubusercontent.com/u/565913?v=3&s=60" alt="" />
     <p>Support for dlang (the <a href="https://dlang.org/">D Programming Language</a>).</p>
     <ul>
       <li>Integrates with the <a href="https://dub.pm/">dub</a> build tool</li>
       <li>Adds support for SDLang (<a href="https://sdlang.org/">Simple Declarative Language</a>)</li>
       <li>Supports auto-completion via <a href="https://github.com/dlang-community/DCD/">DCD</a> (D Completion Daemon)</li>
       <li>Supports code analysis via <a href="https://github.com/dlang-community/D-Scanner/">D-Scanner</a></li>
       <li>Supports formatting via <a href="https://github.com/dlang-community/dfmt/">dfmt</a></li>
       <li>Supports D-Unit Test Runner</li>
       <li>Adds debugger support via GDB</li>
     </ul>
     <p>Get involved with the project on <a href="https://github.com/intellij-dlanguage/intellij-dlanguage/">GitHub</a>.</p>
    ]]></description>

    <change-notes><![CDATA[
        <b>1.34</b> (<a href="https://github.com/intellij-dlanguage/intellij-dlanguage/milestone/56?closed=1">changelist</a>)<br/>
        <ul>
            <li>Supports IntelliJ IDEA 2023.2.* - 2024.1.*</li>
            <li>overhaul the parser</li>
            <li>various bug fixes</li>
        </ul>
    ]]>
    </change-notes>

    <!-- please see http://confluence.jetbrains.com/display/IDEADEV/Build+Number+Ranges for description -->
    <idea-version since-build="232" until-build="241.*"/>

    <!-- We want to support IntelliJ IDEA and CLion
        see http://confluence.jetbrains.com/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
    -->
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.platform</depends>
    <!--<depends>com.intellij.modules.vcs</depends>-->
    <!--<depends>com.intellij.modules.xml</depends>-->
    <!--<depends>com.intellij.modules.xdebugger</depends>-->
    <depends optional="true" config-file="META-INF/idea-only.xml-only.xml">com.intellij.modules.java</depends>
    <!--<depends optional="true" config-file="idea-ultimate-only.xml">com.intellij.modules.ultimate</depends>-->
    <depends optional="true" config-file="META-INF/copyright.xml">com.intellij.copyright</depends>

    <!-- Both AppCode and CLion use cidr.lang -->
    <depends optional="true" config-file="META-INF/clion-only.xml-only.xml">com.intellij.modules.cidr.lang</depends>
    <!--<depends optional="true" config-file="clion-only.xml">com.intellij.modules.clion</depends>-->
    <!--<depends optional="true" config-file="appcode-only.xml">com.intellij.modules.appcode</depends>-->

    <xi:include href="/META-INF/sdlang.xml" xpointer="xpointer(/idea-plugin/*)"/>

    <xi:include href="/META-INF/io.github.intellij.dub.xml" xpointer="xpointer(/idea-plugin/*)"/>

    <extensions defaultExtensionNs="com.intellij">

        <!-- Add your extensions here -->
        <codeInsight.parameterInfo language="D" implementationClass="io.github.intellij.dlanguage.codeinsight.ParameterInfo"/>
        <codeInsight.parameterInfo
            implementationClass="io.github.intellij.dlanguage.codeinsight.ConstructorParameterInfo"
            language="D"/>
        <codeInsight.parameterInfo
            implementationClass="io.github.intellij.dlanguage.codeinsight.TemplateParameterInfo"
            language="D"/>

<!--        <errorHandler implementation="io.github.intellij.dlanguage.errorreporting.DErrorReporter"/>-->
        <errorHandler implementation="io.github.intellij.dlanguage.errorreporting.SentryErrorHandler"/>

        <stubElementTypeHolder class="io.github.intellij.dlanguage.psi.DlangTypes"/>

        <fileType name="D file" language="D" extensions="d;di" fieldName="INSTANCE"
                  implementationClass="io.github.intellij.dlanguage.DlangFileType" />


        <!-- All notification group id's should be defined here. See #654 -->
        <notificationGroup id="DLANG_POPUP" displayType="BALLOON" isLogByDefault="true" bundle="i18n" />

        <lang.parserDefinition language="D" implementationClass="io.github.intellij.dlanguage.DLangParserDefinition"/>
        <lang.parserDefinition language="DDoc" implementationClass="io.github.intellij.dlanguage.features.documentation.DDocParserDefinition"/>

        <lang.syntaxHighlighterFactory language="D" implementationClass="io.github.intellij.dlanguage.highlighting.DHighlighterFactory"/>
        <highlightUsagesHandlerFactory implementation="io.github.intellij.dlanguage.highlighting.exitpoint.DHighlightExitPointsHandlerFactory"/>

        <colorSettingsPage implementation="io.github.intellij.dlanguage.colors.DColorSettingsPage"/>

        <!-- Annotator -->

        <annotator language="D" implementationClass="io.github.intellij.dlanguage.annotator.DHighlightingAnnotator"/>
        <annotator language="D" implementationClass="io.github.intellij.dlanguage.annotator.DStringLiteralAnnotator"/>
        <annotator language="D" implementationClass="io.github.intellij.dlanguage.annotator.DUnclosedCommentAnnotator"/>
        <externalAnnotator language="D"
                           implementationClass="io.github.intellij.dlanguage.highlighting.annotation.external.DExternalAnnotator"/>
        <lang.documentationProvider language="D"
                                    implementationClass="io.github.intellij.dlanguage.features.DDocumentationProvider"/>
        <!-- Refactoring -->

        <renameFileActionProvider implementation="io.github.intellij.dlanguage.refactoring.rename.DlangRenameFileActionProvider"/>

        <lang.refactoringSupport language="D"
                                 implementationClass="io.github.intellij.dlanguage.refactoring.DRefactoringSupportProvider"/>


        <!-- D Language support -->
        <sdkType implementation="io.github.intellij.dlanguage.DlangSdkType"/>
        <projectSdkSetupValidator implementation="io.github.intellij.dlanguage.DLangProjectDmdSetupValidator"/>

        <!-- Line Marker Providers -->
        <runLineMarkerContributor language="D"
                                  implementationClass="io.github.intellij.dlanguage.codeinsight.linemarker.DubExecutableRunLineMarkerContributor"/>

        <!-- module -->
        <moduleType id="DLANGUAGE_MODULE" implementationClass="io.github.intellij.dlanguage.module.DlangModuleType"/>



        <configurationType implementation="io.github.intellij.dlanguage.run.DlangRunDmdConfigurationType"/>
        <programRunner implementation="io.github.intellij.dlanguage.run.DmdBuildRunner"/>

        <consoleFilterProvider implementation="io.github.intellij.dlanguage.run.DmdConsoleFilterProvider"/>

        <configurationType implementation="io.github.intellij.dlanguage.run.DlangRunAppConfigurationType"/>


        <moduleConfigurationEditorProvider
            implementation="io.github.intellij.dlanguage.module.DlangModuleEditorsProvider"/>

        <!-- library -->
        <library.type implementation="io.github.intellij.dlanguage.library.DlangLibraryType"/>
        <orderRootType implementation="io.github.intellij.dlanguage.library.LibFileRootType" id="LIBRARY_FILE"
                       order="FIRST"/>
        <OrderRootTypeUI key="LIBRARY_FILE"
                         implementationClass="io.github.intellij.dlanguage.library.LibFileRootTypeUIFactory"/>

        <!-- Indexes -->
        <fileBasedIndex implementation="io.github.intellij.dlanguage.index.DModuleIndex"/>
        <stubIndex implementation="io.github.intellij.dlanguage.stubs.index.DAllNameIndex"/>
        <stubIndex implementation="io.github.intellij.dlanguage.stubs.index.DTopLevelDeclarationIndex"/>
        <stubIndex implementation="io.github.intellij.dlanguage.stubs.index.DModuleDeclarationIndex"/>
        <stubIndex implementation="io.github.intellij.dlanguage.stubs.index.DTopLevelDeclarationsByModule"/>
        <stubIndex implementation="io.github.intellij.dlanguage.stubs.index.DPublicImportIndex"/>
        <stubIndex implementation="io.github.intellij.dlanguage.stubs.index.DMembersIndex"/>
        <gotoSymbolContributor implementation="io.github.intellij.dlanguage.features.DChooseByNameContributor"/>
        <gotoClassContributor implementation="io.github.intellij.dlanguage.features.DClassContributor"/>
        <!-- Project settings -->

        <!-- Tab under compiler in IntelliJ -> Preferences -->
        <!--<projectConfigurable instance="io.github.intellij.dlanguage.DLanguageCompilerConfigurable"-->
        <!--parentId="project.propCompiler" id="DMD compiler"-->
        <!--displayName="DMD Compiler"/>-->
        <!-- Persistent data + build server communication for compiler settings -->
        <projectService serviceImplementation="io.github.intellij.dlanguage.settings.DLanguageBuildSettings"/>

        <!-- plugin settings are now in: Settings -> Languages &amp; Frameworks -> D Tools -->
        <projectConfigurable groupId="language" order="first"
                             id="D Tools"
                             displayName="D Tools"
                             instance="io.github.intellij.dlanguage.settings.DLanguageToolsConfigurable"/>

        <search.optionContributor implementation="io.github.intellij.dlanguage.settings.DLanguageToolsConfigurable$SearchableDlangTools" />

        <!-- File -> Project Structure dialogue. -->
        <!--<moduleConfigurationEditorProvider implementation="io.github.intellij.dlanguage.settings.DLanguageModuleConfigurationEditor" order="first"/>-->
        <!-- Tab in IntelliJ -> Preferences -->

        <!-- References/navigation -->
        <psi.referenceContributor language="D" implementation="io.github.intellij.dlanguage.psi.references.DReferenceContributor"/>
        <lang.findUsagesProvider language="D"
                                 implementationClass="io.github.intellij.dlanguage.codeinsight.DFindUsagesProvider"/>

        <!-- Editing utils -->
        <lang.braceMatcher language="D" implementationClass="io.github.intellij.dlanguage.features.DBraceMatcher"/>
        <lang.quoteHandler language="D" implementationClass="io.github.intellij.dlanguage.features.DQuoteHandler"/>
        <lang.commenter language="D" implementationClass="io.github.intellij.dlanguage.features.DCommenter"/>

        <completion.contributor language="D"
                                implementationClass="io.github.intellij.dlanguage.codeinsight.DCompletionContributor"/>

        <!-- folding -->
        <lang.foldingBuilder language="D" implementationClass="io.github.intellij.dlanguage.folding.DFoldingBuilder"/>
        <codeFoldingOptionsProvider instance="io.github.intellij.dlanguage.folding.DCodeFoldingOptionsProvider"/>
        <applicationService serviceInterface="io.github.intellij.dlanguage.folding.DCodeFoldingSettings"
                            serviceImplementation="io.github.intellij.dlanguage.folding.impl.DCodeFoldingSettingsImpl"/>

        <!--  <completion.contributor language="D"
                                  implementationClass="io.github.intellij.dlanguage.codeinsight.DCompletionContributorImports"/>-->

        <!-- Surrounders -->
        <!-- // a placeholder for later to enable language specific template expansion. -->
        <!--<lang.surroundDescriptor language="D"
                                 implementationClass="io.github.intellij.dlanguage.template.DlangExpressionSurroundDescriptor"/>-->

        <!-- Live Templates -->
        <defaultLiveTemplates file="/dlang/ide/liveTemplates/D"/>

        <liveTemplateContext implementation="io.github.intellij.dlanguage.template.DlangContext" contextId="D"/>
        <!--<liveTemplateContext implementation="io.github.intellij.dlanguage.template.DlangContextType$Statement"/>-->
        <!--<liveTemplateContext implementation="io.github.intellij.dlanguage.template.DlangContextType$Item"/>-->
        <!--<liveTemplateContext implementation="io.github.intellij.dlanguage.template.DlangContextType$Struct"/>-->
        <!--<liveTemplateContext implementation="io.github.intellij.dlanguage.template.DlangContextType$Mod"/>-->
        <!--<liveTemplateContext implementation="io.github.intellij.dlanguage.template.DlangContextType$Attribute"/>-->

        <!--<liveTemplateMacro implementation="io.github.intellij.dlanguage.template.macros.DlangSuggestIndexNameMacro"/>-->
        <!--<liveTemplateMacro implementation="io.github.intellij.dlanguage.template.macros.DlangCollectionElementNameMacro"/>-->

        <!--formatter-->
        <lang.formatter
            implementationClass="io.github.intellij.dlanguage.features.formatter.DFormattingModelBuilder"
            language="D"/>
        <langCodeStyleSettingsProvider implementation="io.github.intellij.dlanguage.features.formatter.settings.DLanguageCodeStyleSettingsProvider"/>

        <!-- dunit support -->
        <configurationType implementation="io.github.intellij.dlanguage.unittest.DUnitTestRunConfigurationType"/>
        <runConfigurationProducer implementation="io.github.intellij.dlanguage.unittest.DUnitTestRunConfigurationProducer"/>
        <programRunner implementation="io.github.intellij.dlanguage.unittest.DUnitTestProgramRunner"/>
        <!--<testFramework implementation="io.github.intellij.dlanguage.unittest.DUnitTestFramework"/>-->
        <!--<testFinder implementation="io.github.intellij.dlanguage.unittest.DUnitTestFinder"/>-->
        <!--<consoleFilterProvider implementation="io.github.intellij.dlanguage.unittest.DStackTraceFilter"/>-->
        <!--<analyzeStacktraceFilter implementation="io.github.intellij.dlanguage.unittest.DStackTraceFilter"/>-->

        <!--inspections-->
        <localInspection language="D" shortName="PossiblyUndefinedSymbol" bundle="i18n"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="io.github.intellij.dlanguage.inspections.PossiblyUndefinedSymbol"
                         groupKey="d.inspections.groupname"
                         key="d.inspections.symbol.possiblyundefinedsymbol.displayname"/>
        <localInspection bundle="i18n" enabledByDefault="true"
                         implementationClass="io.github.intellij.dlanguage.inspections.ImplicitlyConcatenatedStrings"
                         language="D" level="WARNING"
                         key="d.inspections.symbol.implicitlyconcatenatedstrings.displayname"
                         groupKey="d.inspections.groupname"
                         shortName="ImplicitlyConcatenatedStrings"/>
        <localInspection bundle="i18n" enabledByDefault="true"
                         implementationClass="io.github.intellij.dlanguage.inspections.OldAliasSyntax"
                         language="D" level="WARNING"
                         key="d.inspections.symbol.oldaliassyntax.displayname"
                         groupKey="d.inspections.groupname"
                         shortName="OldAliasSyntax"/>
        <localInspection bundle="i18n" enabledByDefault="true"
                         implementationClass="io.github.intellij.dlanguage.inspections.EmptyStatement"
                         language="D" level="WARNING"
                         key="d.inspections.symbol.emptystatement.displayname"
                         groupKey="d.inspections.groupname"
                         shortName="EmptyStatement"/>
        <localInspection bundle="i18n" enabledByDefault="true"
                         implementationClass="io.github.intellij.dlanguage.inspections.DeleteStatementsAreDeprecated"
                         language="D" level="WARNING"
                         key="d.inspections.symbol.deletestatementsaredeprecated.displayname"
                         groupKey="d.inspections.groupname"
                         shortName="DeleteStatementsAreDeprecated"/>
        <localInspection bundle="i18n" enabledByDefault="true"
                         implementationClass="io.github.intellij.dlanguage.inspections.DeprecatedPhobosImport"
                         language="D" level="WARNING"
                         key="d.inspections.symbol.deprecatedphobosimport.displayname"
                         groupKey="d.inspections.groupname"
                         shortName="DeprecatedPhobosImport"/>
        <localInspection bundle="i18n" enabledByDefault="true"
                         implementationClass="io.github.intellij.dlanguage.inspections.FunctionShouldBeConst"
                         language="D" level="WARNING"
                         key="d.inspections.symbol.functionshouldbeconst.displayname"
                         groupKey="d.inspections.groupname"
                         shortName="FunctionShouldBeConst"/>
        <localInspection bundle="i18n" enabledByDefault="true"
                         implementationClass="io.github.intellij.dlanguage.inspections.AutoFunctionWithoutReturn"
                         language="D" level="WARNING"
                         key="d.inspections.symbol.autofunctionwithoutreturn.displayname"
                         groupKey="d.inspections.groupname"
                         shortName="AutoFunctionWithoutReturn"/>
        <localInspection bundle="i18n" enabledByDefault="true"
                         implementationClass="io.github.intellij.dlanguage.inspections.BuiltinPropertyName"
                         language="D" level="WARNING"
                         key="d.inspections.symbol.builtinpropertyname.displayname"
                         groupKey="d.inspections.groupname"
                         shortName="BuiltinPropertyName"/>

        <!--debugger-->
        <!--<configurationType implementation="uk.co.cwspencer.ideagdb.run.GoGdbRunConfigurationType"/>-->
        <!--<programRunner implementation="uk.co.cwspencer.ideagdb.run.GdbRunner"/>-->
        <xdebugger.breakpointType implementation="uk.co.cwspencer.ideagdb.debug.breakpoints.GdbBreakpointType"/>

        <!-- Structure View -->
        <lang.psiStructureViewFactory language="D" implementationClass="io.github.intellij.dlanguage.structure.DStructureViewFactory"/>

        <!-- Show a widget in the status bar to indicate whether DCD Server is running or not -->
        <statusBarWidgetFactory id="DCD Server status" order="first" implementation="io.github.intellij.dlanguage.dcd.server.DCDServerStatusBarWidgetFactory" />

        <moduleService
            serviceImplementation="io.github.intellij.dlanguage.codeinsight.dcd.DCDCompletionServer"/>
    </extensions>

    <actions>
        <action id="DLanguage.NewDLanguageClass" class="io.github.intellij.dlanguage.actions.CreateDlangClassAction"
                text="D Class" description="Create new D Class">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>
        <action id="DLanguage.DFormat"
                class="io.github.intellij.dlanguage.actions.DFormatAction"
                text="Reformat Code with DFormat"
                description="Format current file with DFormat formatter">
            <add-to-group group-id="CodeFormatGroup" anchor="last"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt K"/>
            <synonym text="DFMT" />
        </action>
        <action id="io.github.intellij.dlanguage.actions.RestartDCD"
                class="io.github.intellij.dlanguage.actions.RestartDCD"
                text="Restart DCD Server"
                description="Restarts the DCD server"
                icon="AllIcons.Actions.Restart">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
        </action>
    </actions>

</idea-plugin>
