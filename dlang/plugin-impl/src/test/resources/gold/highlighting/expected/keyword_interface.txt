DlangTokenType.interface ('interface')
WHITE_SPACE (' ')
DlangTokenType.ID ('D')
WHITE_SPACE ('\n')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.void ('void')
WHITE_SPACE (' ')
DlangTokenType.ID ('bar')
DlangTokenType.( ('(')
DlangTokenType.) (')')
WHITE_SPACE (' ')
DlangTokenType.{ ('{')
WHITE_SPACE (' ')
DlangTokenType.} ('}')
WHITE_SPACE ('  ')
DlangTokenType.LINE_COMMENT ('// error, implementation not allowed')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.static ('static')
WHITE_SPACE (' ')
DlangTokenType.void ('void')
WHITE_SPACE (' ')
DlangTokenType.ID ('foo')
DlangTokenType.( ('(')
DlangTokenType.) (')')
WHITE_SPACE (' ')
DlangTokenType.{ ('{')
WHITE_SPACE (' ')
DlangTokenType.} ('}')
WHITE_SPACE (' ')
DlangTokenType.LINE_COMMENT ('// ok')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.final ('final')
WHITE_SPACE (' ')
DlangTokenType.void ('void')
WHITE_SPACE (' ')
DlangTokenType.ID ('abc')
DlangTokenType.( ('(')
DlangTokenType.) (')')
WHITE_SPACE (' ')
DlangTokenType.{ ('{')
WHITE_SPACE (' ')
DlangTokenType.} ('}')
WHITE_SPACE (' ')
DlangTokenType.LINE_COMMENT ('// ok')
WHITE_SPACE ('\n')
DlangTokenType.} ('}')