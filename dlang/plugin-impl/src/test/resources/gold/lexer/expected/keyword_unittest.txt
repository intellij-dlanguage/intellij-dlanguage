DlangTokenType.class ('class')
WHITE_SPACE (' ')
DlangTokenType.ID ('Sum')
WHITE_SPACE ('\n')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('add')
DlangTokenType.( ('(')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('x')
DlangTokenType., (',')
WHITE_SPACE (' ')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('y')
DlangTokenType.) (')')
WHITE_SPACE (' ')
DlangTokenType.{ ('{')
WHITE_SPACE (' ')
DlangTokenType.return ('return')
WHITE_SPACE (' ')
DlangTokenType.ID ('x')
WHITE_SPACE (' ')
DlangTokenType.+ ('+')
WHITE_SPACE (' ')
DlangTokenType.ID ('y')
DlangTokenType.; (';')
WHITE_SPACE (' ')
DlangTokenType.} ('}')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
DlangTokenType.unittest ('unittest')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DlangTokenType.ID ('Sum')
WHITE_SPACE (' ')
DlangTokenType.ID ('sum')
WHITE_SPACE (' ')
DlangTokenType.= ('=')
WHITE_SPACE (' ')
DlangTokenType.new ('new')
WHITE_SPACE (' ')
DlangTokenType.ID ('Sum')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DlangTokenType.assert ('assert')
DlangTokenType.( ('(')
DlangTokenType.ID ('sum')
DlangTokenType.. ('.')
DlangTokenType.ID ('add')
DlangTokenType.( ('(')
DlangTokenType.INTEGER_LITERAL ('3')
DlangTokenType., (',')
DlangTokenType.INTEGER_LITERAL ('4')
DlangTokenType.) (')')
WHITE_SPACE (' ')
DlangTokenType.== ('==')
WHITE_SPACE (' ')
DlangTokenType.INTEGER_LITERAL ('7')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DlangTokenType.assert ('assert')
DlangTokenType.( ('(')
DlangTokenType.ID ('sum')
DlangTokenType.. ('.')
DlangTokenType.ID ('add')
DlangTokenType.( ('(')
DlangTokenType.- ('-')
DlangTokenType.INTEGER_LITERAL ('2')
DlangTokenType., (',')
DlangTokenType.INTEGER_LITERAL ('0')
DlangTokenType.) (')')
WHITE_SPACE (' ')
DlangTokenType.== ('==')
WHITE_SPACE (' ')
DlangTokenType.- ('-')
DlangTokenType.INTEGER_LITERAL ('2')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.} ('}')
WHITE_SPACE ('\n')
DlangTokenType.} ('}')