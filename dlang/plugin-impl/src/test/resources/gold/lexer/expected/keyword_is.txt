DlangTokenType.import ('import')
WHITE_SPACE (' ')
DlangTokenType.ID ('std')
DlangTokenType.. ('.')
DlangTokenType.ID ('stdio')
DlangTokenType.; (';')
WHITE_SPACE ('\n\n')
DlangTokenType.void ('void')
WHITE_SPACE (' ')
DlangTokenType.ID ('main')
DlangTokenType.( ('(')
DlangTokenType.) (')')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('  ')
DlangTokenType.shared ('shared')
WHITE_SPACE (' ')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('x')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('  ')
DlangTokenType.assert ('assert')
DlangTokenType.( ('(')
DlangTokenType.is ('is')
DlangTokenType.( ('(')
DlangTokenType.typeof ('typeof')
DlangTokenType.( ('(')
DlangTokenType.cast ('cast')
DlangTokenType.( ('(')
DlangTokenType.const ('const')
DlangTokenType.) (')')
DlangTokenType.ID ('x')
DlangTokenType.) (')')
WHITE_SPACE (' ')
DlangTokenType.== ('==')
WHITE_SPACE (' ')
DlangTokenType.const ('const')
WHITE_SPACE (' ')
DlangTokenType.int ('int')
DlangTokenType.) (')')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
DlangTokenType.} ('}')
WHITE_SPACE ('\n\n\n\n')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('test')
DlangTokenType.( ('(')
DlangTokenType.int ('int')
DlangTokenType.[ ('[')
DlangTokenType.ID ('string')
DlangTokenType.] (']')
WHITE_SPACE (' ')
DlangTokenType.ID ('input')
DlangTokenType.) (')')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.if ('if')
DlangTokenType.( ('(')
DlangTokenType.DOUBLE_QUOTED_STRING ('""')
WHITE_SPACE (' ')
DlangTokenType.is ('is')
WHITE_SPACE (' ')
DlangTokenType.null ('null')
DlangTokenType.) (')')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DlangTokenType.return ('return')
WHITE_SPACE (' ')
DlangTokenType.! ('!')
DlangTokenType.ID ('isSomeTemplateThingThatStartsWithIn')
DlangTokenType.! ('!')
DlangTokenType.( ('(')
DlangTokenType.DOUBLE_QUOTED_STRING ('""')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.} ('}')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.return ('return')
WHITE_SPACE (' ')
DlangTokenType.ID ('isSomeTemplateThingThatStartsWithIn')
DlangTokenType.! ('!')
DlangTokenType.( ('(')
DlangTokenType.DOUBLE_QUOTED_STRING ('""')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
DlangTokenType.} ('}')
