DlangTokenType.import ('import')
WHITE_SPACE (' ')
DlangTokenType.ID ('std')
DlangTokenType.. ('.')
DlangTokenType.ID ('stdio')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('x')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
DlangTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('y')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
DlangTokenType.const ('const')
WHITE_SPACE (' ')
DlangTokenType.int ('int')
DlangTokenType.* ('*')
WHITE_SPACE (' ')
DlangTokenType.ID ('pz')
DlangTokenType.; (';')
WHITE_SPACE ('\n\n')
DlangTokenType.pure ('pure')
WHITE_SPACE (' ')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('foo')
DlangTokenType.( ('(')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('i')
DlangTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('             ')
DlangTokenType.char ('char')
DlangTokenType.* ('*')
WHITE_SPACE (' ')
DlangTokenType.ID ('p')
DlangTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('             ')
DlangTokenType.const ('const')
WHITE_SPACE (' ')
DlangTokenType.char ('char')
DlangTokenType.* ('*')
WHITE_SPACE (' ')
DlangTokenType.ID ('q')
DlangTokenType., (',')
WHITE_SPACE ('\n')
WHITE_SPACE ('             ')
DlangTokenType.immutable ('immutable')
WHITE_SPACE (' ')
DlangTokenType.int ('int')
DlangTokenType.* ('*')
WHITE_SPACE (' ')
DlangTokenType.ID ('s')
DlangTokenType.) (')')
WHITE_SPACE ('\n')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.debug ('debug')
WHITE_SPACE (' ')
DlangTokenType.ID ('writeln')
DlangTokenType.( ('(')
DlangTokenType.DOUBLE_QUOTED_STRING ('"in foo()"')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE (' ')
DlangTokenType.LINE_COMMENT ('// ok, impure code allowed in debug statement')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.ID ('x')
WHITE_SPACE (' ')
DlangTokenType.= ('=')
WHITE_SPACE (' ')
DlangTokenType.ID ('i')
DlangTokenType.; (';')
WHITE_SPACE ('   ')
DlangTokenType.LINE_COMMENT ('// error, modifying global state')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.ID ('i')
WHITE_SPACE (' ')
DlangTokenType.= ('=')
WHITE_SPACE (' ')
DlangTokenType.ID ('x')
DlangTokenType.; (';')
WHITE_SPACE ('   ')
DlangTokenType.LINE_COMMENT ('// error, reading mutable global state')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.ID ('i')
WHITE_SPACE (' ')
DlangTokenType.= ('=')
WHITE_SPACE (' ')
DlangTokenType.ID ('y')
DlangTokenType.; (';')
WHITE_SPACE ('   ')
DlangTokenType.LINE_COMMENT ('// ok, reading immutable global state')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.ID ('i')
WHITE_SPACE (' ')
DlangTokenType.= ('=')
WHITE_SPACE (' ')
DlangTokenType.* ('*')
DlangTokenType.ID ('pz')
DlangTokenType.; (';')
WHITE_SPACE (' ')
DlangTokenType.LINE_COMMENT ('// error, reading const global state')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.return ('return')
WHITE_SPACE (' ')
DlangTokenType.ID ('i')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
DlangTokenType.} ('}')
