DlangTokenType.import ('import')
WHITE_SPACE (' ')
DlangTokenType.ID ('std')
DlangTokenType.. ('.')
DlangTokenType.ID ('stdio')
DlangTokenType.; (';')
WHITE_SPACE ('\n\n')
DlangTokenType.void ('void')
WHITE_SPACE (' ')
DlangTokenType.ID ('main')
DlangTokenType.( ('(')
DlangTokenType.) (')')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('  ')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('i')
WHITE_SPACE (' ')
DlangTokenType.= ('=')
WHITE_SPACE (' ')
DlangTokenType.INTEGER_LITERAL ('0')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('  ')
DlangTokenType.do ('do')
WHITE_SPACE ('\n')
WHITE_SPACE ('  ')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('      ')
DlangTokenType.ID ('foo')
DlangTokenType.( ('(')
DlangTokenType.ID ('i')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('  ')
DlangTokenType.} ('}')
WHITE_SPACE (' ')
DlangTokenType.while ('while')
WHITE_SPACE (' ')
DlangTokenType.( ('(')
DlangTokenType.++ ('++')
DlangTokenType.ID ('i')
WHITE_SPACE (' ')
DlangTokenType.< ('<')
WHITE_SPACE (' ')
DlangTokenType.INTEGER_LITERAL ('10')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
DlangTokenType.} ('}')
