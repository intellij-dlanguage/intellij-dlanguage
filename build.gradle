buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.intellij' version '0.2.5'
}


sourceSets {
    main {
        java.srcDirs 'src/main/java', 'src/main/kotlin', 'gen'
        resources.srcDirs 'src/main/resources'
    }
    test {
        java.srcDirs 'src/test/java', 'src/test/kotlin'
    }
}

version = "${version}"

allprojects {
    apply plugin: 'kotlin'
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs << "-Xlint:deprecation"
    }

    // take the version number defined in gradle build and use that in plugin.xml
    task initConfig(type: Copy) {
        from('src/main/resources') {
            include '**/plugin.xml'
            filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [version: version])
        }
    }

    apply plugin: 'org.jetbrains.intellij'
    intellij {
        pluginName 'intellij-dlanguage'
        version ideaVersion
        plugins 'copyright'
        downloadSources Boolean.valueOf(sources)
        sameSinceUntilBuild Boolean.valueOf(isEAP)

        publish {
            username System.getenv('JETBRAINS_USERNAME')
            password System.getenv('JETBRAINS_PASSWORD')
            channel 'on-demand'
        }
    }

    def compilationPackages = ['net/masterthought/dlanguage/build/**', 'net/masterthought/dlanguage/jps/**']

    test {
        useJUnit {
            exclude compilationPackages
            include '**/**/DTestCase.class'
        }
        testLogging {
            exceptionFormat = 'full'
        }
    }

    task testCompilation(type: Test, group: 'Verification', dependsOn: [classes, testClasses]) {
        useJUnit {
            include compilationPackages
        }
        testLogging {
            exceptionFormat = 'full'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile project('jps-shared')
    compile project('jps-plugin')
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "io.kotlintest:kotlintest:$kotlintest_version"
}

apply plugin: 'idea'
idea {
    project {
        jdkName = javaVersion
        languageLevel = javaVersion
    }
    module {
        generatedSourceDirs += file('gen')
    }
}
