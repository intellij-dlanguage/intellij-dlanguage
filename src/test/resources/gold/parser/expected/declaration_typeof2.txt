D Language File
  CLASS_DECLARATION
    PsiElement(DlangTokenType.class)('class')
    IDENTIFIER
      PsiElement(DlangTokenType.ID)('A')
    DLanguageStructBodyImpl(STRUCT_BODY)
      PsiElement(DlangTokenType.{)('{')
      PsiElement(DlangTokenType.})('}')
  CLASS_DECLARATION
    PsiElement(DlangTokenType.class)('class')
    IDENTIFIER
      PsiElement(DlangTokenType.ID)('B')
    PsiElement(DlangTokenType.:)(':')
    DLanguageBaseClassListImpl(BASE_CLASS_LIST)
      DLanguageBaseClassImpl(BASE_CLASS)
        DLanguageBasicTypeImpl(BASIC_TYPE)
          DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('A')
    DLanguageStructBodyImpl(STRUCT_BODY)
      PsiElement(DlangTokenType.{)('{')
      DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
        DLanguageBasicTypeImpl(BASIC_TYPE)
          DLanguageTypeofExpressionImpl(TYPEOF_EXPRESSION)
            PsiElement(DlangTokenType.typeof)('typeof')
            PsiElement(DlangTokenType.()('(')
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.this)('this')
            PsiElement(DlangTokenType.))(')')
        IDENTIFIER_INITIALIZER
          IDENTIFIER
            PsiElement(DlangTokenType.ID)('x')
        PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('// x is declared to be a B')
      DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
        DLanguageBasicTypeImpl(BASIC_TYPE)
          DLanguageTypeofExpressionImpl(TYPEOF_EXPRESSION)
            PsiElement(DlangTokenType.typeof)('typeof')
            PsiElement(DlangTokenType.()('(')
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.super)('super')
            PsiElement(DlangTokenType.))(')')
        IDENTIFIER_INITIALIZER
          IDENTIFIER
            PsiElement(DlangTokenType.ID)('y')
        PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('// y is declared to be an A')
      PsiElement(DlangTokenType.})('}')
  STRUCT_DECLARATION
    PsiElement(DlangTokenType.struct)('struct')
    IDENTIFIER
      PsiElement(DlangTokenType.ID)('C')
    DLanguageStructBodyImpl(STRUCT_BODY)
      PsiElement(DlangTokenType.{)('{')
      DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
        DLanguageStorageClassImpl(STORAGE_CLASS)
          PsiElement(DlangTokenType.static)('static')
        DLanguageBasicTypeImpl(BASIC_TYPE)
          DLanguageTypeofExpressionImpl(TYPEOF_EXPRESSION)
            PsiElement(DlangTokenType.typeof)('typeof')
            PsiElement(DlangTokenType.()('(')
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.this)('this')
            PsiElement(DlangTokenType.))(')')
        IDENTIFIER_INITIALIZER
          IDENTIFIER
            PsiElement(DlangTokenType.ID)('z')
        PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('// z is declared to be a C')
      DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
        DLanguageBasicTypeImpl(BASIC_TYPE)
          DLanguageTypeofExpressionImpl(TYPEOF_EXPRESSION)
            PsiElement(DlangTokenType.typeof)('typeof')
            PsiElement(DlangTokenType.()('(')
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.super)('super')
            PsiElement(DlangTokenType.))(')')
        IDENTIFIER_INITIALIZER
          IDENTIFIER
            PsiElement(DlangTokenType.ID)('q')
        PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('// error, no super struct for C')
      PsiElement(DlangTokenType.})('}')
  UNITTEST
    PsiElement(DlangTokenType.unittest)('unittest')
    DLanguageBlockStatementImpl(BLOCK_STATEMENT)
      PsiElement(DlangTokenType.{)('{')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageTypeofExpressionImpl(TYPEOF_EXPRESSION)
              PsiElement(DlangTokenType.typeof)('typeof')
              PsiElement(DlangTokenType.()('(')
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.this)('this')
              PsiElement(DlangTokenType.))(')')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('r')
          PsiElement(DlangTokenType.;)(';')
          PsiComment(DlangTokenType.LINE_COMMENT)('// error, no enclosing struct or class')
      PsiElement(DlangTokenType.})('}')