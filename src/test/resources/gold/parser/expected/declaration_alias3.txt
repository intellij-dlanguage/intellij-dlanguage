D Language File
  DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
    DLanguageCompileConditionImpl(COMPILE_CONDITION)
      DLanguageVersionConditionImpl(VERSION_CONDITION)
        PsiElement(DlangTokenType.version)('version')
        PsiElement(DlangTokenType.()('(')
        IDENTIFIER
          PsiElement(DlangTokenType.ID)('Win32')
        PsiElement(DlangTokenType.))(')')
    DLanguageDeclarationBlockImpl(DECLARATION_BLOCK)
      PsiElement(DlangTokenType.{)('{')
      DLanguageAliasDeclarationImpl(ALIAS_DECLARATION)
        PsiElement(DlangTokenType.alias)('alias')
        ALIAS_INITIALIZER
          IDENTIFIER
            PsiElement(DlangTokenType.ID)('myfoo')
          PsiElement(DlangTokenType.=)('=')
          DLanguageTypeImpl(TYPE)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
                DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
                  IDENTIFIER
                    PsiElement(DlangTokenType.ID)('win32')
                  PsiElement(DlangTokenType..)('.')
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('foo')
        PsiElement(DlangTokenType.;)(';')
      PsiElement(DlangTokenType.})('}')
  DLanguageConditionalDeclarationImpl(CONDITIONAL_DECLARATION)
    DLanguageCompileConditionImpl(COMPILE_CONDITION)
      DLanguageVersionConditionImpl(VERSION_CONDITION)
        PsiElement(DlangTokenType.version)('version')
        PsiElement(DlangTokenType.()('(')
        IDENTIFIER
          PsiElement(DlangTokenType.ID)('linux')
        PsiElement(DlangTokenType.))(')')
    DLanguageDeclarationBlockImpl(DECLARATION_BLOCK)
      PsiElement(DlangTokenType.{)('{')
      DLanguageAliasDeclarationImpl(ALIAS_DECLARATION)
        PsiElement(DlangTokenType.alias)('alias')
        ALIAS_INITIALIZER
          IDENTIFIER
            PsiElement(DlangTokenType.ID)('myfoo')
          PsiElement(DlangTokenType.=)('=')
          DLanguageTypeImpl(TYPE)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
                DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
                  IDENTIFIER
                    PsiElement(DlangTokenType.ID)('linux')
                  PsiElement(DlangTokenType..)('.')
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('bar')
        PsiElement(DlangTokenType.;)(';')
      PsiElement(DlangTokenType.})('}')
  DLanguageAliasDeclarationImpl(ALIAS_DECLARATION)
    PsiElement(DlangTokenType.alias)('alias')
    ALIAS_INITIALIZER
      IDENTIFIER
        PsiElement(DlangTokenType.ID)('strlen')
      PsiElement(DlangTokenType.=)('=')
      DLanguageTypeImpl(TYPE)
        DLanguageBasicTypeImpl(BASIC_TYPE)
          DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
            DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('string')
              PsiElement(DlangTokenType..)('.')
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('strlen')
    PsiElement(DlangTokenType.;)(';')
  DLanguageAliasDeclarationImpl(ALIAS_DECLARATION)
    PsiElement(DlangTokenType.alias)('alias')
    ALIAS_INITIALIZER
      IDENTIFIER
        PsiElement(DlangTokenType.ID)('abc')
      PsiElement(DlangTokenType.=)('=')
      DLanguageTypeImpl(TYPE)
        DLanguageBasicTypeImpl(BASIC_TYPE)
          DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
            DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('foo')
              PsiElement(DlangTokenType..)('.')
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('bar')
    PsiElement(DlangTokenType.;)(';')
    PsiComment(DlangTokenType.LINE_COMMENT)('// is it a type or a symbol?')
  STRUCT_DECLARATION
    PsiElement(DlangTokenType.struct)('struct')
    IDENTIFIER
      PsiElement(DlangTokenType.ID)('S')
    DLanguageStructBodyImpl(STRUCT_BODY)
      PsiElement(DlangTokenType.{)('{')
      DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
        DLanguageStorageClassImpl(STORAGE_CLASS)
          PsiElement(DlangTokenType.static)('static')
        DLanguageBasicTypeImpl(BASIC_TYPE)
          DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
            PsiElement(DlangTokenType.int)('int')
        IDENTIFIER_INITIALIZER
          IDENTIFIER
            PsiElement(DlangTokenType.ID)('i')
        PsiElement(DlangTokenType.;)(';')
      PsiElement(DlangTokenType.})('}')
  DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
        IDENTIFIER
          PsiElement(DlangTokenType.ID)('S')
    IDENTIFIER_INITIALIZER
      IDENTIFIER
        PsiElement(DlangTokenType.ID)('s')
    PsiElement(DlangTokenType.;)(';')
  DLanguageAliasDeclarationImpl(ALIAS_DECLARATION)
    PsiElement(DlangTokenType.alias)('alias')
    ALIAS_INITIALIZER
      IDENTIFIER
        PsiElement(DlangTokenType.ID)('a')
      PsiElement(DlangTokenType.=)('=')
      DLanguageTypeImpl(TYPE)
        DLanguageBasicTypeImpl(BASIC_TYPE)
          DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
            DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('s')
              PsiElement(DlangTokenType..)('.')
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('i')
    PsiElement(DlangTokenType.;)(';')
    PsiComment(DlangTokenType.LINE_COMMENT)('// illegal, s.i is an expression')
  DLanguageAliasDeclarationImpl(ALIAS_DECLARATION)
    PsiElement(DlangTokenType.alias)('alias')
    ALIAS_INITIALIZER
      IDENTIFIER
        PsiElement(DlangTokenType.ID)('b')
      PsiElement(DlangTokenType.=)('=')
      DLanguageTypeImpl(TYPE)
        DLanguageBasicTypeImpl(BASIC_TYPE)
          DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
            DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('S')
              PsiElement(DlangTokenType..)('.')
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('i')
    PsiElement(DlangTokenType.;)(';')
    PsiComment(DlangTokenType.LINE_COMMENT)('// ok')
  UNITTEST
    PsiElement(DlangTokenType.unittest)('unittest')
    DLanguageBlockStatementImpl(BLOCK_STATEMENT)
      PsiElement(DlangTokenType.{)('{')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('b')
          PsiElement(DlangTokenType.=)('=')
          DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
            PsiElement(DlangTokenType.INTEGER_LITERAL)('4')
        PsiElement(DlangTokenType.;)(';')
      PsiComment(DlangTokenType.LINE_COMMENT)('// sets S.i to 4')
      PsiElement(DlangTokenType.})('}')