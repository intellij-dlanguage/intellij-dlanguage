D Language File
  IMPORT_DECLARATION
    PsiElement(DlangTokenType.import)('import')
    SINGLE_IMPORT
      DLanguageIdentifierChainImpl(IDENTIFIER_CHAIN)
        DLanguageIdentifierChainImpl(IDENTIFIER_CHAIN)
          PsiElement(DlangTokenType.ID)('std')
        PsiElement(DlangTokenType..)('.')
        PsiElement(DlangTokenType.ID)('stdio')
    PsiElement(DlangTokenType.;)(';')
  FUNCTION_DECLARATION
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.void)('void')
    PsiElement(DlangTokenType.ID)('main')
    DLanguageParametersImpl(PARAMETERS)
      PsiElement(DlangTokenType.()('(')
      PsiElement(DlangTokenType.))(')')
    DLanguageSpecifiedFunctionBodyImpl(SPECIFIED_FUNCTION_BODY)
      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
        PsiElement(DlangTokenType.{)('{')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                PsiElement(DlangTokenType.int)('int')
            IDENTIFIER_INITIALIZER
              PsiElement(DlangTokenType.ID)('j')
            PsiElement(DlangTokenType.;)(';')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageMixinTypeImpl(MIXIN_TYPE)
            PsiElement(DlangTokenType.mixin)('mixin')
            PsiElement(DlangTokenType.()('(')
            DLanguageArgumentListImpl(ARGUMENT_LIST)
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"\n        int x = 3;\n        for (int i = 0; i < 3; i++)\n            writeln(x + i, ++j);\n        "')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('// ok')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageStorageClassImpl(STORAGE_CLASS)
              PsiElement(DlangTokenType.const)('const')
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                PsiElement(DlangTokenType.char)('char')
            DLanguageTypeSuffixImpl(TYPE_SUFFIX)
              PsiElement(DlangTokenType.[)('[')
              PsiElement(DlangTokenType.])(']')
            IDENTIFIER_INITIALIZER
              PsiElement(DlangTokenType.ID)('s')
              PsiElement(DlangTokenType.=)('=')
              DLanguageInitializerImpl(INITIALIZER)
                DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                  PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"int y;"')
            PsiElement(DlangTokenType.;)(';')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageMixinTypeImpl(MIXIN_TYPE)
            PsiElement(DlangTokenType.mixin)('mixin')
            PsiElement(DlangTokenType.()('(')
            DLanguageArgumentListImpl(ARGUMENT_LIST)
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(DlangTokenType.ID)('s')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('// ok')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
            DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(DlangTokenType.ID)('y')
            PsiElement(DlangTokenType.=)('=')
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.INTEGER_LITERAL)('4')
          PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('// ok, mixin declared y')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                PsiElement(DlangTokenType.char)('char')
            DLanguageTypeSuffixImpl(TYPE_SUFFIX)
              PsiElement(DlangTokenType.[)('[')
              PsiElement(DlangTokenType.])(']')
            IDENTIFIER_INITIALIZER
              PsiElement(DlangTokenType.ID)('t')
              PsiElement(DlangTokenType.=)('=')
              DLanguageInitializerImpl(INITIALIZER)
                DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                  PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"y = 3;"')
            PsiElement(DlangTokenType.;)(';')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageMixinTypeImpl(MIXIN_TYPE)
            PsiElement(DlangTokenType.mixin)('mixin')
            PsiElement(DlangTokenType.()('(')
            DLanguageArgumentListImpl(ARGUMENT_LIST)
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(DlangTokenType.ID)('t')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('// error, t is not evaluatable at compile time')
        PsiComment(DlangTokenType.LINE_COMMENT)('//mixin("y =") 4; // error, string must be complete statement//idk why this was included in test cases becuase it isn't valid')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageMixinTypeImpl(MIXIN_TYPE)
            PsiElement(DlangTokenType.mixin)('mixin')
            PsiElement(DlangTokenType.()('(')
            DLanguageArgumentListImpl(ARGUMENT_LIST)
              DLanguageAddExpressionImpl(ADD_EXPRESSION)
                DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                  PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"y ="')
                PsiElement(DlangTokenType.~)('~')
                DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                  PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"4;"')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('// ok')
        PsiElement(DlangTokenType.})('}')