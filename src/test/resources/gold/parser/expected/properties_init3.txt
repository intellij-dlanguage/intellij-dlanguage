D Language File
  STRUCT_DECLARATION
    PsiElement(DlangTokenType.struct)('struct')
    PsiElement(DlangTokenType.ID)('S')
    DLanguageStructBodyImpl(STRUCT_BODY)
      PsiElement(DlangTokenType.{)('{')
      DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
        DLanguageBasicTypeImpl(BASIC_TYPE)
          DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
            PsiElement(DlangTokenType.int)('int')
        IDENTIFIER_INITIALIZER
          PsiElement(DlangTokenType.ID)('a')
        PsiElement(DlangTokenType.;)(';')
      CONSTRUCTOR
        DLanguageAttributeImpl(ATTRIBUTE)
          DLanguageAtAttributeImpl(AT_ATTRIBUTE)
            PsiElement(DlangTokenType.@)('@')
            PsiElement(DlangTokenType.ID)('disable')
        PsiElement(DlangTokenType.this)('this')
        DLanguageParametersImpl(PARAMETERS)
          PsiElement(DlangTokenType.()('(')
          PsiElement(DlangTokenType.))(')')
        PsiElement(DlangTokenType.;)(';')
      CONSTRUCTOR
        PsiElement(DlangTokenType.this)('this')
        DLanguageParametersImpl(PARAMETERS)
          PsiElement(DlangTokenType.()('(')
          PARAMETER
            DLanguageTypeImpl(TYPE)
              DLanguageBasicTypeImpl(BASIC_TYPE)
                DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                  PsiElement(DlangTokenType.int)('int')
            PsiElement(DlangTokenType.ID)('n')
          PsiElement(DlangTokenType.))(')')
        DLanguageSpecifiedFunctionBodyImpl(SPECIFIED_FUNCTION_BODY)
          DLanguageBlockStatementImpl(BLOCK_STATEMENT)
            PsiElement(DlangTokenType.{)('{')
            DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
              DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(DlangTokenType.ID)('a')
                PsiElement(DlangTokenType.=)('=')
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(DlangTokenType.ID)('n')
              PsiElement(DlangTokenType.;)(';')
            PsiElement(DlangTokenType.})('}')
      DLanguageInvariantImpl(INVARIANT)
        PsiElement(DlangTokenType.invariant)('invariant')
        DLanguageBlockStatementImpl(BLOCK_STATEMENT)
          PsiElement(DlangTokenType.{)('{')
          DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
            DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
              PsiElement(DlangTokenType.assert)('assert')
              PsiElement(DlangTokenType.()('(')
              DLanguageAssertArgumentsImpl(ASSERT_ARGUMENTS)
                DLanguageRelExpressionImpl(REL_EXPRESSION)
                  DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(DlangTokenType.ID)('a')
                  PsiElement(DlangTokenType.>)('>')
                  DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                    PsiElement(DlangTokenType.INTEGER_LITERAL)('0')
              PsiElement(DlangTokenType.))(')')
            PsiElement(DlangTokenType.;)(';')
          PsiElement(DlangTokenType.})('}')
      FUNCTION_DECLARATION
        DLanguageBasicTypeImpl(BASIC_TYPE)
          DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
            PsiElement(DlangTokenType.void)('void')
        PsiElement(DlangTokenType.ID)('check')
        DLanguageParametersImpl(PARAMETERS)
          PsiElement(DlangTokenType.()('(')
          PsiElement(DlangTokenType.))(')')
        DLanguageSpecifiedFunctionBodyImpl(SPECIFIED_FUNCTION_BODY)
          DLanguageBlockStatementImpl(BLOCK_STATEMENT)
            PsiElement(DlangTokenType.{)('{')
            PsiElement(DlangTokenType.})('}')
      PsiElement(DlangTokenType.})('}')
  FUNCTION_DECLARATION
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.void)('void')
    PsiElement(DlangTokenType.ID)('main')
    DLanguageParametersImpl(PARAMETERS)
      PsiElement(DlangTokenType.()('(')
      PsiElement(DlangTokenType.))(')')
    DLanguageSpecifiedFunctionBodyImpl(SPECIFIED_FUNCTION_BODY)
      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
        PsiElement(DlangTokenType.{)('{')
        PsiComment(DlangTokenType.LINE_COMMENT)('//S s1;           // Error: variable s1 initializer required for type S')
        PsiComment(DlangTokenType.LINE_COMMENT)('//S s2 = S();     // Error: constructor S.this is not callable')
        PsiComment(DlangTokenType.LINE_COMMENT)('// because it is annotated with @disable')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
                PsiElement(DlangTokenType.ID)('S')
            IDENTIFIER_INITIALIZER
              PsiElement(DlangTokenType.ID)('s3')
              PsiElement(DlangTokenType.=)('=')
              DLanguageInitializerImpl(INITIALIZER)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(DlangTokenType.ID)('S')
                  PsiElement(DlangTokenType..)('.')
                  PsiElement(DlangTokenType.ID)('init')
            PsiElement(DlangTokenType.;)(';')
            PsiComment(DlangTokenType.LINE_COMMENT)('// Bad. s3.a == 0, and it violates the invariant of S.')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageFunctionCallExpressionImpl(FUNCTION_CALL_EXPRESSION)
            DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(DlangTokenType.ID)('s3')
              PsiElement(DlangTokenType..)('.')
              PsiElement(DlangTokenType.ID)('check')
            PsiElement(DlangTokenType.()('(')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('// Assertion failure.')
        PsiElement(DlangTokenType.})('}')