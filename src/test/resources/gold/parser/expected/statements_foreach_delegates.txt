D Language File
  FUNCTION_DECLARATION
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.void)('void')
    IDENTIFIER
      PsiElement(DlangTokenType.ID)('main')
    DLanguageParametersImpl(PARAMETERS)
      PsiElement(DlangTokenType.()('(')
      PsiElement(DlangTokenType.))(')')
    DLanguageSpecifiedFunctionBodyImpl(SPECIFIED_FUNCTION_BODY)
      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
        PsiElement(DlangTokenType.{)('{')
        PsiComment(DlangTokenType.LINE_COMMENT)('// Custom loop implementation, that iterates over powers of 2 with')
        PsiComment(DlangTokenType.LINE_COMMENT)('// alternating sign. The loop body is passed in dg.')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          FUNCTION_DECLARATION
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                PsiElement(DlangTokenType.int)('int')
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('myLoop')
            DLanguageParametersImpl(PARAMETERS)
              PsiElement(DlangTokenType.()('(')
              PARAMETER
                DLanguageTypeImpl(TYPE)
                  DLanguageBasicTypeImpl(BASIC_TYPE)
                    DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                      PsiElement(DlangTokenType.int)('int')
                  DLanguageTypeSuffixImpl(TYPE_SUFFIX)
                    PsiElement(DlangTokenType.delegate)('delegate')
                    DLanguageParametersImpl(PARAMETERS)
                      PsiElement(DlangTokenType.()('(')
                      PARAMETER
                        PsiElement(DlangTokenType.ref)('ref')
                        DLanguageTypeImpl(TYPE)
                          DLanguageBasicTypeImpl(BASIC_TYPE)
                            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                              PsiElement(DlangTokenType.int)('int')
                      PsiElement(DlangTokenType.))(')')
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('dg')
              PsiElement(DlangTokenType.))(')')
            DLanguageSpecifiedFunctionBodyImpl(SPECIFIED_FUNCTION_BODY)
              DLanguageBlockStatementImpl(BLOCK_STATEMENT)
                PsiElement(DlangTokenType.{)('{')
                DLanguageForStatementImpl(FOR_STATEMENT)
                  PsiElement(DlangTokenType.for)('for')
                  PsiElement(DlangTokenType.()('(')
                  DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                    DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
                      DLanguageBasicTypeImpl(BASIC_TYPE)
                        DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                          PsiElement(DlangTokenType.int)('int')
                      IDENTIFIER_INITIALIZER
                        IDENTIFIER
                          PsiElement(DlangTokenType.ID)('z')
                        PsiElement(DlangTokenType.=)('=')
                        DLanguageInitializerImpl(INITIALIZER)
                          DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                            PsiElement(DlangTokenType.INTEGER_LITERAL)('1')
                      PsiElement(DlangTokenType.;)(';')
                  DLanguageRelExpressionImpl(REL_EXPRESSION)
                    DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      IDENTIFIER
                        PsiElement(DlangTokenType.ID)('z')
                    PsiElement(DlangTokenType.<)('<')
                    DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                      PsiElement(DlangTokenType.INTEGER_LITERAL)('128')
                  PsiElement(DlangTokenType.;)(';')
                  DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                    DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      IDENTIFIER
                        PsiElement(DlangTokenType.ID)('z')
                    PsiElement(DlangTokenType.*=)('*=')
                    DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                      PsiElement(DlangTokenType.-)('-')
                      DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                        PsiElement(DlangTokenType.INTEGER_LITERAL)('2')
                  PsiElement(DlangTokenType.))(')')
                  DLanguageBlockStatementImpl(BLOCK_STATEMENT)
                    PsiElement(DlangTokenType.{)('{')
                    DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
                      DLanguageAutoDeclarationImpl(AUTO_DECLARATION)
                        DLanguageStorageClassImpl(STORAGE_CLASS)
                          PsiElement(DlangTokenType.auto)('auto')
                        AUTO_ASSIGNMENT
                          IDENTIFIER
                            PsiElement(DlangTokenType.ID)('ret')
                          PsiElement(DlangTokenType.=)('=')
                          DLanguageInitializerImpl(INITIALIZER)
                            DLanguageFunctionCallExpressionImpl(FUNCTION_CALL_EXPRESSION)
                              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                IDENTIFIER
                                  PsiElement(DlangTokenType.ID)('dg')
                              PsiElement(DlangTokenType.()('(')
                              DLanguageArgumentListImpl(ARGUMENT_LIST)
                                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                                  IDENTIFIER
                                    PsiElement(DlangTokenType.ID)('z')
                              PsiElement(DlangTokenType.))(')')
                        PsiElement(DlangTokenType.;)(';')
                    PsiComment(DlangTokenType.LINE_COMMENT)('// If the loop body contains a break, ret will be non-zero.')
                    DLanguageIfStatementImpl(IF_STATEMENT)
                      PsiElement(DlangTokenType.if)('if')
                      PsiElement(DlangTokenType.()('(')
                      DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                        DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          IDENTIFIER
                            PsiElement(DlangTokenType.ID)('ret')
                        PsiElement(DlangTokenType.!=)('!=')
                        DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                          PsiElement(DlangTokenType.INTEGER_LITERAL)('0')
                      PsiElement(DlangTokenType.))(')')
                      DLanguageReturnStatementImpl(RETURN_STATEMENT)
                        PsiElement(DlangTokenType.return)('return')
                        DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                          IDENTIFIER
                            PsiElement(DlangTokenType.ID)('ret')
                        PsiElement(DlangTokenType.;)(';')
                    PsiElement(DlangTokenType.})('}')
                DLanguageReturnStatementImpl(RETURN_STATEMENT)
                  PsiElement(DlangTokenType.return)('return')
                  DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                    PsiElement(DlangTokenType.INTEGER_LITERAL)('0')
                  PsiElement(DlangTokenType.;)(';')
                PsiElement(DlangTokenType.})('}')
        PsiComment(DlangTokenType.LINE_COMMENT)('// This example loop simply collects the loop index values into an array.')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                PsiElement(DlangTokenType.int)('int')
            DLanguageTypeSuffixImpl(TYPE_SUFFIX)
              PsiElement(DlangTokenType.[)('[')
              PsiElement(DlangTokenType.])(']')
            IDENTIFIER_INITIALIZER
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('result')
            PsiElement(DlangTokenType.;)(';')
        DLanguageForeachStatementImpl(FOREACH_STATEMENT)
          PsiElement(DlangTokenType.foreach)('foreach')
          PsiElement(DlangTokenType.()('(')
          DLanguageForeachTypeListImpl(FOREACH_TYPE_LIST)
            FOREACH_TYPE
              PsiElement(DlangTokenType.ref)('ref')
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('x')
          PsiElement(DlangTokenType.;)(';')
          DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
            PsiElement(DlangTokenType.&)('&')
            DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('myLoop')
          PsiElement(DlangTokenType.))(')')
          DLanguageBlockStatementImpl(BLOCK_STATEMENT)
            PsiElement(DlangTokenType.{)('{')
            DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
              DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DlangTokenType.ID)('result')
                PsiElement(DlangTokenType.~=)('~=')
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DlangTokenType.ID)('x')
              PsiElement(DlangTokenType.;)(';')
            PsiElement(DlangTokenType.})('}')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
            PsiElement(DlangTokenType.assert)('assert')
            PsiElement(DlangTokenType.()('(')
            DLanguageAssertArgumentsImpl(ASSERT_ARGUMENTS)
              DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DlangTokenType.ID)('result')
                PsiElement(DlangTokenType.==)('==')
                DLanguageArrayLiteralImpl(ARRAY_LITERAL)
                  PsiElement(DlangTokenType.[)('[')
                  DLanguageArrayInitializerImpl(ARRAY_INITIALIZER)
                    DLanguageArrayMemberInitializationImpl(ARRAY_MEMBER_INITIALIZATION)
                      DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                        PsiElement(DlangTokenType.INTEGER_LITERAL)('1')
                    PsiElement(DlangTokenType.,)(',')
                    DLanguageArrayMemberInitializationImpl(ARRAY_MEMBER_INITIALIZATION)
                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                        PsiElement(DlangTokenType.-)('-')
                        DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                          PsiElement(DlangTokenType.INTEGER_LITERAL)('2')
                    PsiElement(DlangTokenType.,)(',')
                    DLanguageArrayMemberInitializationImpl(ARRAY_MEMBER_INITIALIZATION)
                      DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                        PsiElement(DlangTokenType.INTEGER_LITERAL)('4')
                    PsiElement(DlangTokenType.,)(',')
                    DLanguageArrayMemberInitializationImpl(ARRAY_MEMBER_INITIALIZATION)
                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                        PsiElement(DlangTokenType.-)('-')
                        DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                          PsiElement(DlangTokenType.INTEGER_LITERAL)('8')
                    PsiElement(DlangTokenType.,)(',')
                    DLanguageArrayMemberInitializationImpl(ARRAY_MEMBER_INITIALIZATION)
                      DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                        PsiElement(DlangTokenType.INTEGER_LITERAL)('16')
                    PsiElement(DlangTokenType.,)(',')
                    DLanguageArrayMemberInitializationImpl(ARRAY_MEMBER_INITIALIZATION)
                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                        PsiElement(DlangTokenType.-)('-')
                        DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                          PsiElement(DlangTokenType.INTEGER_LITERAL)('32')
                    PsiElement(DlangTokenType.,)(',')
                    DLanguageArrayMemberInitializationImpl(ARRAY_MEMBER_INITIALIZATION)
                      DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                        PsiElement(DlangTokenType.INTEGER_LITERAL)('64')
                    PsiElement(DlangTokenType.,)(',')
                    DLanguageArrayMemberInitializationImpl(ARRAY_MEMBER_INITIALIZATION)
                      DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                        PsiElement(DlangTokenType.-)('-')
                        DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                          PsiElement(DlangTokenType.INTEGER_LITERAL)('128')
                  PsiElement(DlangTokenType.])(']')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.;)(';')
        PsiElement(DlangTokenType.})('}')