D Language File
  FUNCTION_DECLARATION
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.void)('void')
    PsiElement(DlangTokenType.ID)('main')
    DLanguageParametersImpl(PARAMETERS)
      PsiElement(DlangTokenType.()('(')
      PsiElement(DlangTokenType.))(')')
    DLanguageSpecifiedFunctionBodyImpl(SPECIFIED_FUNCTION_BODY)
      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
        PsiElement(DlangTokenType.{)('{')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                PsiElement(DlangTokenType.int)('int')
            DLanguageTypeSuffixImpl(TYPE_SUFFIX)
              PsiElement(DlangTokenType.[)('[')
              PsiElement(DlangTokenType.])(']')
            IDENTIFIER_INITIALIZER
              PsiElement(DlangTokenType.ID)('data1')
              PsiElement(DlangTokenType.=)('=')
              DLanguageInitializerImpl(INITIALIZER)
                DLanguageArrayLiteralImpl(ARRAY_LITERAL)
                  PsiElement(DlangTokenType.[)('[')
                  DLanguageArrayInitializerImpl(ARRAY_INITIALIZER)
                    DLanguageArrayMemberInitializationImpl(ARRAY_MEMBER_INITIALIZATION)
                      DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                        PsiElement(DlangTokenType.INTEGER_LITERAL)('1')
                    PsiElement(DlangTokenType.,)(',')
                    DLanguageArrayMemberInitializationImpl(ARRAY_MEMBER_INITIALIZATION)
                      DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                        PsiElement(DlangTokenType.INTEGER_LITERAL)('2')
                    PsiElement(DlangTokenType.,)(',')
                    DLanguageArrayMemberInitializationImpl(ARRAY_MEMBER_INITIALIZATION)
                      DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                        PsiElement(DlangTokenType.INTEGER_LITERAL)('3')
                  PsiElement(DlangTokenType.])(']')
            PsiElement(DlangTokenType.;)(';')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                PsiElement(DlangTokenType.long)('long')
            DLanguageTypeSuffixImpl(TYPE_SUFFIX)
              PsiElement(DlangTokenType.[)('[')
              PsiElement(DlangTokenType.])(']')
            IDENTIFIER_INITIALIZER
              PsiElement(DlangTokenType.ID)('data2')
            PsiElement(DlangTokenType.;)(';')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                PsiElement(DlangTokenType.void)('void')
            DLanguageTypeSuffixImpl(TYPE_SUFFIX)
              PsiElement(DlangTokenType.[)('[')
              PsiElement(DlangTokenType.])(']')
            IDENTIFIER_INITIALIZER
              PsiElement(DlangTokenType.ID)('arr')
              PsiElement(DlangTokenType.=)('=')
              DLanguageInitializerImpl(INITIALIZER)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(DlangTokenType.ID)('data1')
            PsiElement(DlangTokenType.;)(';')
            PsiComment(DlangTokenType.LINE_COMMENT)('// OK, int[] implicit converts to void[].')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
            PsiElement(DlangTokenType.assert)('assert')
            PsiElement(DlangTokenType.()('(')
            DLanguageAssertArgumentsImpl(ASSERT_ARGUMENTS)
              DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(DlangTokenType.ID)('data1')
                  PsiElement(DlangTokenType..)('.')
                  PsiElement(DlangTokenType.ID)('length')
                PsiElement(DlangTokenType.==)('==')
                DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                  PsiElement(DlangTokenType.INTEGER_LITERAL)('3')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.;)(';')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
            PsiElement(DlangTokenType.assert)('assert')
            PsiElement(DlangTokenType.()('(')
            DLanguageAssertArgumentsImpl(ASSERT_ARGUMENTS)
              DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(DlangTokenType.ID)('arr')
                  PsiElement(DlangTokenType..)('.')
                  PsiElement(DlangTokenType.ID)('length')
                PsiElement(DlangTokenType.==)('==')
                DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                  PsiElement(DlangTokenType.INTEGER_LITERAL)('12')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('// length is implicitly converted to bytes.')
        PsiComment(DlangTokenType.LINE_COMMENT)('//data1 = arr;                 // Illegal: void[] does not implicitly')
        PsiComment(DlangTokenType.LINE_COMMENT)('// convert to int[].')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                PsiElement(DlangTokenType.int)('int')
            DLanguageTypeSuffixImpl(TYPE_SUFFIX)
              PsiElement(DlangTokenType.[)('[')
              PsiElement(DlangTokenType.])(']')
            IDENTIFIER_INITIALIZER
              PsiElement(DlangTokenType.ID)('data3')
              PsiElement(DlangTokenType.=)('=')
              DLanguageInitializerImpl(INITIALIZER)
                DLanguageCastExpressionImpl(CAST_EXPRESSION)
                  PsiElement(DlangTokenType.cast)('cast')
                  PsiElement(DlangTokenType.()('(')
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                        PsiElement(DlangTokenType.int)('int')
                    DLanguageTypeSuffixImpl(TYPE_SUFFIX)
                      PsiElement(DlangTokenType.[)('[')
                      PsiElement(DlangTokenType.])(']')
                  PsiElement(DlangTokenType.))(')')
                  DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(DlangTokenType.ID)('arr')
            PsiElement(DlangTokenType.;)(';')
            PsiComment(DlangTokenType.LINE_COMMENT)('// OK, can convert with explicit cast.')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
            DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(DlangTokenType.ID)('data2')
            PsiElement(DlangTokenType.=)('=')
            DLanguageCastExpressionImpl(CAST_EXPRESSION)
              PsiElement(DlangTokenType.cast)('cast')
              PsiElement(DlangTokenType.()('(')
              DLanguageTypeImpl(TYPE)
                DLanguageBasicTypeImpl(BASIC_TYPE)
                  DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                    PsiElement(DlangTokenType.long)('long')
                DLanguageTypeSuffixImpl(TYPE_SUFFIX)
                  PsiElement(DlangTokenType.[)('[')
                  PsiElement(DlangTokenType.])(']')
              PsiElement(DlangTokenType.))(')')
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(DlangTokenType.ID)('arr')
          PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('// Runtime error: long.sizeof == 8, which')
        PsiComment(DlangTokenType.LINE_COMMENT)('// does not divide arr.length, which is 12')
        PsiComment(DlangTokenType.LINE_COMMENT)('// bytes.')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                PsiElement(DlangTokenType.byte)('byte')
            DLanguageTypeSuffixImpl(TYPE_SUFFIX)
              PsiElement(DlangTokenType.[)('[')
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.INTEGER_LITERAL)('2')
              PsiElement(DlangTokenType.])(']')
            IDENTIFIER_INITIALIZER
              PsiElement(DlangTokenType.ID)('x')
            PsiElement(DlangTokenType.;)(';')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                PsiElement(DlangTokenType.int)('int')
            DLanguageTypeSuffixImpl(TYPE_SUFFIX)
              PsiElement(DlangTokenType.[)('[')
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.INTEGER_LITERAL)('2')
              PsiElement(DlangTokenType.])(']')
            IDENTIFIER_INITIALIZER
              PsiElement(DlangTokenType.ID)('y')
            PsiElement(DlangTokenType.;)(';')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                PsiElement(DlangTokenType.void)('void')
            DLanguageTypeSuffixImpl(TYPE_SUFFIX)
              PsiElement(DlangTokenType.[)('[')
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.INTEGER_LITERAL)('2')
              PsiElement(DlangTokenType.])(']')
            IDENTIFIER_INITIALIZER
              PsiElement(DlangTokenType.ID)('a')
              PsiElement(DlangTokenType.=)('=')
              DLanguageInitializerImpl(INITIALIZER)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(DlangTokenType.ID)('x')
            PsiElement(DlangTokenType.;)(';')
            PsiComment(DlangTokenType.LINE_COMMENT)('// OK, lengths match')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                PsiElement(DlangTokenType.void)('void')
            DLanguageTypeSuffixImpl(TYPE_SUFFIX)
              PsiElement(DlangTokenType.[)('[')
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.INTEGER_LITERAL)('2')
              PsiElement(DlangTokenType.])(']')
            IDENTIFIER_INITIALIZER
              PsiElement(DlangTokenType.ID)('b')
              PsiElement(DlangTokenType.=)('=')
              DLanguageInitializerImpl(INITIALIZER)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(DlangTokenType.ID)('y')
            PsiElement(DlangTokenType.;)(';')
            PsiComment(DlangTokenType.LINE_COMMENT)('// Error: int[2] is 8 bytes long, doesn't fit in 2 bytes.')
        PsiElement(DlangTokenType.})('}')