D Language File
  UNITTEST
    PsiElement(DlangTokenType.unittest)('unittest')
    DLanguageBlockStatementImpl(BLOCK_STATEMENT)
      PsiElement(DlangTokenType.{)('{')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.char)('char')
          DLanguageTypeSuffixImpl(TYPE_SUFFIX)
            PsiElement(DlangTokenType.[)('[')
            PsiElement(DlangTokenType.])(']')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str1')
            PsiElement(DlangTokenType.=)('=')
            DLanguageInitializerImpl(INITIALIZER)
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"abc"')
          PsiElement(DlangTokenType.;)(';')
          PsiComment(DlangTokenType.LINE_COMMENT)('// error, "abc" is not mutable')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.char)('char')
          DLanguageTypeSuffixImpl(TYPE_SUFFIX)
            PsiElement(DlangTokenType.[)('[')
            PsiElement(DlangTokenType.])(']')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str2')
            PsiElement(DlangTokenType.=)('=')
            DLanguageInitializerImpl(INITIALIZER)
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                  PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"abc"')
                PsiElement(DlangTokenType..)('.')
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('dup')
          PsiElement(DlangTokenType.;)(';')
          PsiComment(DlangTokenType.LINE_COMMENT)('// ok, make mutable copy')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            PsiElement(DlangTokenType.immutable)('immutable')
            PsiElement(DlangTokenType.()('(')
            DLanguageTypeImpl(TYPE)
              DLanguageBasicTypeImpl(BASIC_TYPE)
                DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                  PsiElement(DlangTokenType.char)('char')
            PsiElement(DlangTokenType.))(')')
          DLanguageTypeSuffixImpl(TYPE_SUFFIX)
            PsiElement(DlangTokenType.[)('[')
            PsiElement(DlangTokenType.])(']')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str3')
            PsiElement(DlangTokenType.=)('=')
            DLanguageInitializerImpl(INITIALIZER)
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"abc"')
          PsiElement(DlangTokenType.;)(';')
          PsiComment(DlangTokenType.LINE_COMMENT)('// ok')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            PsiElement(DlangTokenType.immutable)('immutable')
            PsiElement(DlangTokenType.()('(')
            DLanguageTypeImpl(TYPE)
              DLanguageBasicTypeImpl(BASIC_TYPE)
                DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                  PsiElement(DlangTokenType.char)('char')
            PsiElement(DlangTokenType.))(')')
          DLanguageTypeSuffixImpl(TYPE_SUFFIX)
            PsiElement(DlangTokenType.[)('[')
            PsiElement(DlangTokenType.])(']')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str4')
            PsiElement(DlangTokenType.=)('=')
            DLanguageInitializerImpl(INITIALIZER)
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('str1')
          PsiElement(DlangTokenType.;)(';')
          PsiComment(DlangTokenType.LINE_COMMENT)('// error, str4 is not mutable')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            PsiElement(DlangTokenType.immutable)('immutable')
            PsiElement(DlangTokenType.()('(')
            DLanguageTypeImpl(TYPE)
              DLanguageBasicTypeImpl(BASIC_TYPE)
                DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                  PsiElement(DlangTokenType.char)('char')
            PsiElement(DlangTokenType.))(')')
          DLanguageTypeSuffixImpl(TYPE_SUFFIX)
            PsiElement(DlangTokenType.[)('[')
            PsiElement(DlangTokenType.])(']')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str5')
            PsiElement(DlangTokenType.=)('=')
            DLanguageInitializerImpl(INITIALIZER)
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DlangTokenType.ID)('str1')
                PsiElement(DlangTokenType..)('.')
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('idup')
          PsiElement(DlangTokenType.;)(';')
          PsiComment(DlangTokenType.LINE_COMMENT)('// ok, make immutable copy')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.char)('char')
          DLanguageTypeSuffixImpl(TYPE_SUFFIX)
            PsiElement(DlangTokenType.[)('[')
            PsiElement(DlangTokenType.])(']')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str1')
            PsiElement(DlangTokenType.=)('=')
            DLanguageInitializerImpl(INITIALIZER)
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"abc"')
          PsiElement(DlangTokenType.;)(';')
          PsiComment(DlangTokenType.LINE_COMMENT)('// error, "abc" is not mutable')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.char)('char')
          DLanguageTypeSuffixImpl(TYPE_SUFFIX)
            PsiElement(DlangTokenType.[)('[')
            PsiElement(DlangTokenType.])(']')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str2')
            PsiElement(DlangTokenType.=)('=')
            DLanguageInitializerImpl(INITIALIZER)
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                  PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"abc"')
                PsiElement(DlangTokenType..)('.')
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('dup')
          PsiElement(DlangTokenType.;)(';')
          PsiComment(DlangTokenType.LINE_COMMENT)('// ok, make mutable copy')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('string')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str3')
            PsiElement(DlangTokenType.=)('=')
            DLanguageInitializerImpl(INITIALIZER)
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"abc"')
          PsiElement(DlangTokenType.;)(';')
          PsiComment(DlangTokenType.LINE_COMMENT)('// ok')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('string')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str4')
            PsiElement(DlangTokenType.=)('=')
            DLanguageInitializerImpl(INITIALIZER)
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('str1')
          PsiElement(DlangTokenType.;)(';')
          PsiComment(DlangTokenType.LINE_COMMENT)('// error, str4 is not mutable')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('string')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str5')
            PsiElement(DlangTokenType.=)('=')
            DLanguageInitializerImpl(INITIALIZER)
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DlangTokenType.ID)('str1')
                PsiElement(DlangTokenType..)('.')
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('idup')
          PsiElement(DlangTokenType.;)(';')
          PsiComment(DlangTokenType.LINE_COMMENT)('// ok, make immutable copy')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str1')
          PsiElement(DlangTokenType.=)('=')
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str2')
        PsiElement(DlangTokenType.;)(';')
      DLanguageIfStatementImpl(IF_STATEMENT)
        PsiElement(DlangTokenType.if)('if')
        PsiElement(DlangTokenType.()('(')
        DLanguageRelExpressionImpl(REL_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str1')
          PsiElement(DlangTokenType.<)('<')
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str3')
        PsiElement(DlangTokenType.))(')')
        DLanguageBlockStatementImpl(BLOCK_STATEMENT)
          PsiElement(DlangTokenType.{)('{')
          PsiElement(DlangTokenType.})('}')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageFunctionCallExpressionImpl(FUNCTION_CALL_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('func')
          PsiElement(DlangTokenType.()('(')
          DLanguageArgumentListImpl(ARGUMENT_LIST)
            DLanguageAddExpressionImpl(ADD_EXPRESSION)
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('str3')
              PsiElement(DlangTokenType.~)('~')
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('str4')
          PsiElement(DlangTokenType.))(')')
        PsiElement(DlangTokenType.;)(';')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str4')
          PsiElement(DlangTokenType.~=)('~=')
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str1')
        PsiElement(DlangTokenType.;)(';')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.char)('char')
          DLanguageTypeSuffixImpl(TYPE_SUFFIX)
            PsiElement(DlangTokenType.*)('*')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('p')
            PsiElement(DlangTokenType.=)('=')
            DLanguageInitializerImpl(INITIALIZER)
              DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
                PsiElement(DlangTokenType.&)('&')
                DLanguageArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
                  DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    IDENTIFIER
                      PsiElement(DlangTokenType.ID)('str')
                  DLanguageIndexExpressionImpl(INDEX_EXPRESSION)
                    PsiElement(DlangTokenType.[)('[')
                    DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                      PsiElement(DlangTokenType.INTEGER_LITERAL)('3')
                    PsiElement(DlangTokenType.])(']')
          PsiElement(DlangTokenType.;)(';')
          PsiComment(DlangTokenType.LINE_COMMENT)('// pointer to 4th element')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.char)('char')
          DLanguageTypeSuffixImpl(TYPE_SUFFIX)
            PsiElement(DlangTokenType.*)('*')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('p')
            PsiElement(DlangTokenType.=)('=')
            DLanguageInitializerImpl(INITIALIZER)
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('str')
          PsiElement(DlangTokenType.;)(';')
          PsiComment(DlangTokenType.LINE_COMMENT)('// pointer to 1st element')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('str')
          PsiElement(DlangTokenType.~=)('~=')
          DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
            PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"\0"')
        PsiElement(DlangTokenType.;)(';')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.char)('char')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('c')
          PsiElement(DlangTokenType.;)(';')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.wchar)('wchar')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('w')
          PsiElement(DlangTokenType.;)(';')
      DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
        DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.dchar)('dchar')
          IDENTIFIER_INITIALIZER
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('d')
          PsiElement(DlangTokenType.;)(';')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('c')
          PsiElement(DlangTokenType.=)('=')
          DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
            PsiElement(DlangTokenType.CHARACTER_LITERAL)(''b'')
        PsiElement(DlangTokenType.;)(';')
      PsiComment(DlangTokenType.LINE_COMMENT)('// c is assigned the character 'b'')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('w')
          PsiElement(DlangTokenType.=)('=')
          DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
            PsiElement(DlangTokenType.CHARACTER_LITERAL)(''b'')
        PsiElement(DlangTokenType.;)(';')
      PsiComment(DlangTokenType.LINE_COMMENT)('// w is assigned the wchar character 'b'')
      PsiComment(DlangTokenType.LINE_COMMENT)('//w = 'bc';  // error - only one wchar character at a time')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('w')
          PsiElement(DlangTokenType.=)('=')
          DLanguageArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"b"')
            DLanguageIndexExpressionImpl(INDEX_EXPRESSION)
              PsiElement(DlangTokenType.[)('[')
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.INTEGER_LITERAL)('0')
              PsiElement(DlangTokenType.])(']')
        PsiElement(DlangTokenType.;)(';')
      PsiComment(DlangTokenType.LINE_COMMENT)('// w is assigned the wchar character 'b'')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('w')
          PsiElement(DlangTokenType.=)('=')
          DLanguageArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"\r"')
            DLanguageIndexExpressionImpl(INDEX_EXPRESSION)
              PsiElement(DlangTokenType.[)('[')
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.INTEGER_LITERAL)('0')
              PsiElement(DlangTokenType.])(']')
        PsiElement(DlangTokenType.;)(';')
      PsiComment(DlangTokenType.LINE_COMMENT)('// w is assigned the carriage return wchar character')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('d')
          PsiElement(DlangTokenType.=)('=')
          DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
            PsiElement(DlangTokenType.CHARACTER_LITERAL)(''d'')
        PsiElement(DlangTokenType.;)(';')
      PsiComment(DlangTokenType.LINE_COMMENT)('// d is assigned the character 'd'')
      PsiElement(DlangTokenType.})('}')