D Language File
  FUNCTION_DECLARATION
    DLanguageStorageClassImpl(STORAGE_CLASS)
      DLanguageLinkageAttributeImpl(LINKAGE_ATTRIBUTE)
        PsiElement(DlangTokenType.extern)('extern')
        PsiElement(DlangTokenType.()('(')
        PsiElement(DlangTokenType.ID)('C')
        PsiElement(DlangTokenType.))(')')
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.void)('void')
    PsiElement(DlangTokenType.ID)('foo')
    DLanguageParametersImpl(PARAMETERS)
      PsiElement(DlangTokenType.()('(')
      PARAMETER
        DLanguageTypeImpl(TYPE)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.int)('int')
        PsiElement(DlangTokenType.ID)('x')
      PsiElement(DlangTokenType.,)(',')
      PARAMETER
        DLanguageTypeImpl(TYPE)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.int)('int')
        PsiElement(DlangTokenType.ID)('y')
      PsiElement(DlangTokenType.,)(',')
      PsiElement(DlangTokenType....)('...')
      PsiElement(DlangTokenType.))(')')
    DLanguageMissingFunctionBodyImpl(MISSING_FUNCTION_BODY)
      PsiElement(DlangTokenType.;)(';')
  UNITTEST
    PsiElement(DlangTokenType.unittest)('unittest')
    DLanguageBlockStatementImpl(BLOCK_STATEMENT)
      PsiElement(DlangTokenType.{)('{')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageFunctionCallExpressionImpl(FUNCTION_CALL_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(DlangTokenType.ID)('foo')
          PsiElement(DlangTokenType.()('(')
          DLanguageArgumentListImpl(ARGUMENT_LIST)
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.INTEGER_LITERAL)('3')
            PsiElement(DlangTokenType.,)(',')
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.INTEGER_LITERAL)('4')
          PsiElement(DlangTokenType.))(')')
        PsiElement(DlangTokenType.;)(';')
      PsiComment(DlangTokenType.LINE_COMMENT)('// ok')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageFunctionCallExpressionImpl(FUNCTION_CALL_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(DlangTokenType.ID)('foo')
          PsiElement(DlangTokenType.()('(')
          DLanguageArgumentListImpl(ARGUMENT_LIST)
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.INTEGER_LITERAL)('3')
            PsiElement(DlangTokenType.,)(',')
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.INTEGER_LITERAL)('4')
            PsiElement(DlangTokenType.,)(',')
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.FLOAT_LITERAL)('6.8')
          PsiElement(DlangTokenType.))(')')
        PsiElement(DlangTokenType.;)(';')
      PsiComment(DlangTokenType.LINE_COMMENT)('// ok, one variadic argument')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageFunctionCallExpressionImpl(FUNCTION_CALL_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            PsiElement(DlangTokenType.ID)('foo')
          PsiElement(DlangTokenType.()('(')
          DLanguageArgumentListImpl(ARGUMENT_LIST)
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.INTEGER_LITERAL)('2')
          PsiElement(DlangTokenType.))(')')
        PsiElement(DlangTokenType.;)(';')
      PsiComment(DlangTokenType.LINE_COMMENT)('// error, y is a required argument')
      PsiElement(DlangTokenType.})('}')
  FUNCTION_DECLARATION
    DLanguageStorageClassImpl(STORAGE_CLASS)
      DLanguageLinkageAttributeImpl(LINKAGE_ATTRIBUTE)
        PsiElement(DlangTokenType.extern)('extern')
        PsiElement(DlangTokenType.()('(')
        PsiElement(DlangTokenType.ID)('C')
        PsiElement(DlangTokenType.))(')')
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.int)('int')
    PsiElement(DlangTokenType.ID)('def')
    DLanguageParametersImpl(PARAMETERS)
      PsiElement(DlangTokenType.()('(')
      PsiElement(DlangTokenType....)('...')
      PsiElement(DlangTokenType.))(')')
    DLanguageMissingFunctionBodyImpl(MISSING_FUNCTION_BODY)
      PsiElement(DlangTokenType.;)(';')
    PsiComment(DlangTokenType.LINE_COMMENT)('// error, must have at least one parameter')
  DLanguageImportDeclarationImpl(IMPORT_DECLARATION)
    PsiElement(DlangTokenType.import)('import')
    SINGLE_IMPORT
      DLanguageIdentifierChainImpl(IDENTIFIER_CHAIN)
        DLanguageIdentifierChainImpl(IDENTIFIER_CHAIN)
          DLanguageIdentifierChainImpl(IDENTIFIER_CHAIN)
            PsiElement(DlangTokenType.ID)('core')
          PsiElement(DlangTokenType..)('.')
          PsiElement(DlangTokenType.ID)('stdc')
        PsiElement(DlangTokenType..)('.')
        PsiElement(DlangTokenType.ID)('stdarg')
    PsiElement(DlangTokenType.;)(';')
  FUNCTION_DECLARATION
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.void)('void')
    PsiElement(DlangTokenType.ID)('test')
    DLanguageParametersImpl(PARAMETERS)
      PsiElement(DlangTokenType.()('(')
      PsiElement(DlangTokenType.))(')')
    DLanguageSpecifiedFunctionBodyImpl(SPECIFIED_FUNCTION_BODY)
      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
        PsiElement(DlangTokenType.{)('{')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageFunctionCallExpressionImpl(FUNCTION_CALL_EXPRESSION)
            DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(DlangTokenType.ID)('foo')
            PsiElement(DlangTokenType.()('(')
            DLanguageArgumentListImpl(ARGUMENT_LIST)
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.INTEGER_LITERAL)('3')
              PsiElement(DlangTokenType.,)(',')
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.INTEGER_LITERAL)('4')
              PsiElement(DlangTokenType.,)(',')
              DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                PsiElement(DlangTokenType.INTEGER_LITERAL)('5')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('// first variadic argument is 5')
        PsiElement(DlangTokenType.})('}')
  FUNCTION_DECLARATION
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.void)('void')
    PsiElement(DlangTokenType.ID)('foo')
    DLanguageParametersImpl(PARAMETERS)
      PsiElement(DlangTokenType.()('(')
      PARAMETER
        DLanguageTypeImpl(TYPE)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.int)('int')
        PsiElement(DlangTokenType.ID)('x')
      PsiElement(DlangTokenType.,)(',')
      PARAMETER
        DLanguageTypeImpl(TYPE)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.int)('int')
        PsiElement(DlangTokenType.ID)('y')
      PsiElement(DlangTokenType.,)(',')
      PsiElement(DlangTokenType....)('...')
      PsiElement(DlangTokenType.))(')')
    DLanguageSpecifiedFunctionBodyImpl(SPECIFIED_FUNCTION_BODY)
      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
        PsiElement(DlangTokenType.{)('{')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
                PsiElement(DlangTokenType.ID)('va_list')
            IDENTIFIER_INITIALIZER
              PsiElement(DlangTokenType.ID)('args')
            PsiElement(DlangTokenType.;)(';')
        DLanguageConditionalStatementImpl(CONDITIONAL_STATEMENT)
          DLanguageCompileConditionImpl(COMPILE_CONDITION)
            DLanguageVersionConditionImpl(VERSION_CONDITION)
              PsiElement(DlangTokenType.version)('version')
              PsiElement(DlangTokenType.()('(')
              PsiElement(DlangTokenType.ID)('X86')
              PsiElement(DlangTokenType.))(')')
          DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
            DLanguageFunctionCallExpressionImpl(FUNCTION_CALL_EXPRESSION)
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(DlangTokenType.ID)('va_start')
              PsiElement(DlangTokenType.()('(')
              DLanguageArgumentListImpl(ARGUMENT_LIST)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(DlangTokenType.ID)('args')
                PsiElement(DlangTokenType.,)(',')
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(DlangTokenType.ID)('y')
              PsiElement(DlangTokenType.))(')')
            PsiElement(DlangTokenType.;)(';')
          PsiComment(DlangTokenType.LINE_COMMENT)('// y is the last named parameter')
          PsiElement(DlangTokenType.else)('else')
          DLanguageConditionalStatementImpl(CONDITIONAL_STATEMENT)
            DLanguageCompileConditionImpl(COMPILE_CONDITION)
              DLanguageVersionConditionImpl(VERSION_CONDITION)
                PsiElement(DlangTokenType.version)('version')
                PsiElement(DlangTokenType.()('(')
                PsiElement(DlangTokenType.ID)('Win64')
                PsiElement(DlangTokenType.))(')')
            DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
              DLanguageFunctionCallExpressionImpl(FUNCTION_CALL_EXPRESSION)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  PsiElement(DlangTokenType.ID)('va_start')
                PsiElement(DlangTokenType.()('(')
                DLanguageArgumentListImpl(ARGUMENT_LIST)
                  DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(DlangTokenType.ID)('args')
                  PsiElement(DlangTokenType.,)(',')
                  DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(DlangTokenType.ID)('y')
                PsiElement(DlangTokenType.))(')')
              PsiElement(DlangTokenType.;)(';')
            PsiComment(DlangTokenType.LINE_COMMENT)('// ditto')
            PsiElement(DlangTokenType.else)('else')
            DLanguageConditionalStatementImpl(CONDITIONAL_STATEMENT)
              DLanguageCompileConditionImpl(COMPILE_CONDITION)
                DLanguageVersionConditionImpl(VERSION_CONDITION)
                  PsiElement(DlangTokenType.version)('version')
                  PsiElement(DlangTokenType.()('(')
                  PsiElement(DlangTokenType.ID)('X86_64')
                  PsiElement(DlangTokenType.))(')')
              DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
                DLanguageFunctionCallExpressionImpl(FUNCTION_CALL_EXPRESSION)
                  DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    PsiElement(DlangTokenType.ID)('va_start')
                  PsiElement(DlangTokenType.()('(')
                  DLanguageArgumentListImpl(ARGUMENT_LIST)
                    DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(DlangTokenType.ID)('args')
                    PsiElement(DlangTokenType.,)(',')
                    DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                      PsiElement(DlangTokenType.ID)('__va_argsave')
                  PsiElement(DlangTokenType.))(')')
                PsiElement(DlangTokenType.;)(';')
              PsiElement(DlangTokenType.else)('else')
              DLanguageStaticAssertStatementImpl(STATIC_ASSERT_STATEMENT)
                PsiElement(DlangTokenType.static)('static')
                DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
                  PsiElement(DlangTokenType.assert)('assert')
                  PsiElement(DlangTokenType.()('(')
                  DLanguageAssertArgumentsImpl(ASSERT_ARGUMENTS)
                    DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                      PsiElement(DlangTokenType.INTEGER_LITERAL)('0')
                    PsiElement(DlangTokenType.,)(',')
                    DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                      PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"Platform not supported."')
                  PsiElement(DlangTokenType.))(')')
                PsiElement(DlangTokenType.;)(';')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
                PsiElement(DlangTokenType.int)('int')
            IDENTIFIER_INITIALIZER
              PsiElement(DlangTokenType.ID)('z')
            PsiElement(DlangTokenType.;)(';')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageFunctionCallExpressionImpl(FUNCTION_CALL_EXPRESSION)
            DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(DlangTokenType.ID)('va_arg')
            PsiElement(DlangTokenType.()('(')
            DLanguageArgumentListImpl(ARGUMENT_LIST)
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(DlangTokenType.ID)('args')
              PsiElement(DlangTokenType.,)(',')
              DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                PsiElement(DlangTokenType.ID)('z')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('// z is set to 5')
        PsiElement(DlangTokenType.})('}')