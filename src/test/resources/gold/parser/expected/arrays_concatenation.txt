D Language File
  DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.int)('int')
    DLanguageTypeSuffixImpl(TYPE_SUFFIX)
      PsiElement(DlangTokenType.[)('[')
      PsiElement(DlangTokenType.])(']')
    IDENTIFIER_INITIALIZER
      IDENTIFIER
        PsiElement(DlangTokenType.ID)('a')
    PsiElement(DlangTokenType.;)(';')
  DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.int)('int')
    DLanguageTypeSuffixImpl(TYPE_SUFFIX)
      PsiElement(DlangTokenType.[)('[')
      PsiElement(DlangTokenType.])(']')
    IDENTIFIER_INITIALIZER
      IDENTIFIER
        PsiElement(DlangTokenType.ID)('b')
    PsiElement(DlangTokenType.;)(';')
  DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.int)('int')
    DLanguageTypeSuffixImpl(TYPE_SUFFIX)
      PsiElement(DlangTokenType.[)('[')
      PsiElement(DlangTokenType.])(']')
    IDENTIFIER_INITIALIZER
      IDENTIFIER
        PsiElement(DlangTokenType.ID)('c')
    PsiElement(DlangTokenType.;)(';')
  UNITTEST
    PsiElement(DlangTokenType.unittest)('unittest')
    DLanguageBlockStatementImpl(BLOCK_STATEMENT)
      PsiElement(DlangTokenType.{)('{')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageAssignExpressionImpl(ASSIGN_EXPRESSION)
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('a')
          PsiElement(DlangTokenType.=)('=')
          DLanguageAddExpressionImpl(ADD_EXPRESSION)
            DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('b')
            PsiElement(DlangTokenType.~)('~')
            DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('c')
        PsiElement(DlangTokenType.;)(';')
      PsiComment(DlangTokenType.LINE_COMMENT)('// Create an array from the concatenation')
      PsiComment(DlangTokenType.LINE_COMMENT)('// of the b and c arrays')
      PsiElement(DlangTokenType.})('}')