D Language File
  UNITTEST
    PsiElement(DlangTokenType.unittest)('unittest')
    DLanguageBlockStatementImpl(BLOCK_STATEMENT)
      PsiElement(DlangTokenType.{)('{')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageCastExpressionImpl(CAST_EXPRESSION)
          PsiElement(DlangTokenType.cast)('cast')
          PsiElement(DlangTokenType.()('(')
          DLanguageTypeImpl(TYPE)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('foo')
          PsiElement(DlangTokenType.))(')')
          DLanguageUnaryExpressionImpl(UNARY_EXPRESSION)
            PsiElement(DlangTokenType.-)('-')
            DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('p')
        PsiElement(DlangTokenType.;)(';')
      PsiComment(DlangTokenType.LINE_COMMENT)('// cast (-p) to type foo')
      DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
        DLanguageAddExpressionImpl(ADD_EXPRESSION)
          DLanguageParenthesisedExpressionImpl(PARENTHESISED_EXPRESSION)
            PsiElement(DlangTokenType.()('(')
            DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('foo')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.-)('-')
          DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('p')
        PsiElement(DlangTokenType.;)(';')
      PsiComment(DlangTokenType.LINE_COMMENT)('// subtract p from foo')
      PsiElement(DlangTokenType.})('}')
  CLASS_DECLARATION
    PsiElement(DlangTokenType.class)('class')
    IDENTIFIER
      PsiElement(DlangTokenType.ID)('A')
    DLanguageStructBodyImpl(STRUCT_BODY)
      PsiElement(DlangTokenType.{)('{')
      PsiElement(DlangTokenType.})('}')
  CLASS_DECLARATION
    PsiElement(DlangTokenType.class)('class')
    IDENTIFIER
      PsiElement(DlangTokenType.ID)('B')
    PsiElement(DlangTokenType.:)(':')
    DLanguageBaseClassListImpl(BASE_CLASS_LIST)
      DLanguageBaseClassImpl(BASE_CLASS)
        DLanguageBasicTypeImpl(BASIC_TYPE)
          DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
            IDENTIFIER
              PsiElement(DlangTokenType.ID)('A')
    DLanguageStructBodyImpl(STRUCT_BODY)
      PsiElement(DlangTokenType.{)('{')
      PsiElement(DlangTokenType.})('}')
  FUNCTION_DECLARATION
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.void)('void')
    IDENTIFIER
      PsiElement(DlangTokenType.ID)('test')
    DLanguageParametersImpl(PARAMETERS)
      PsiElement(DlangTokenType.()('(')
      PARAMETER
        DLanguageTypeImpl(TYPE)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('A')
        IDENTIFIER
          PsiElement(DlangTokenType.ID)('a')
      PsiElement(DlangTokenType.,)(',')
      PARAMETER
        DLanguageTypeImpl(TYPE)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('B')
        IDENTIFIER
          PsiElement(DlangTokenType.ID)('b')
      PsiElement(DlangTokenType.))(')')
    DLanguageSpecifiedFunctionBodyImpl(SPECIFIED_FUNCTION_BODY)
      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
        PsiElement(DlangTokenType.{)('{')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('B')
            IDENTIFIER_INITIALIZER
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('bx')
              PsiElement(DlangTokenType.=)('=')
              DLanguageInitializerImpl(INITIALIZER)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DlangTokenType.ID)('a')
            PsiElement(DlangTokenType.;)(';')
            PsiComment(DlangTokenType.LINE_COMMENT)('// error, need cast')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('B')
            IDENTIFIER_INITIALIZER
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('bx')
              PsiElement(DlangTokenType.=)('=')
              DLanguageInitializerImpl(INITIALIZER)
                DLanguageCastExpressionImpl(CAST_EXPRESSION)
                  PsiElement(DlangTokenType.cast)('cast')
                  PsiElement(DlangTokenType.()('(')
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
                        IDENTIFIER
                          PsiElement(DlangTokenType.ID)('B')
                  PsiElement(DlangTokenType.))(')')
                  DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    IDENTIFIER
                      PsiElement(DlangTokenType.ID)('a')
            PsiElement(DlangTokenType.;)(';')
            PsiComment(DlangTokenType.LINE_COMMENT)('// bx is null if a is not a B')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('A')
            IDENTIFIER_INITIALIZER
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('ax')
              PsiElement(DlangTokenType.=)('=')
              DLanguageInitializerImpl(INITIALIZER)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DlangTokenType.ID)('b')
            PsiElement(DlangTokenType.;)(';')
            PsiComment(DlangTokenType.LINE_COMMENT)('// no cast needed')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('A')
            IDENTIFIER_INITIALIZER
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('ax')
              PsiElement(DlangTokenType.=)('=')
              DLanguageInitializerImpl(INITIALIZER)
                DLanguageCastExpressionImpl(CAST_EXPRESSION)
                  PsiElement(DlangTokenType.cast)('cast')
                  PsiElement(DlangTokenType.()('(')
                  DLanguageTypeImpl(TYPE)
                    DLanguageBasicTypeImpl(BASIC_TYPE)
                      DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
                        IDENTIFIER
                          PsiElement(DlangTokenType.ID)('A')
                  PsiElement(DlangTokenType.))(')')
                  DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                    IDENTIFIER
                      PsiElement(DlangTokenType.ID)('b')
            PsiElement(DlangTokenType.;)(';')
            PsiComment(DlangTokenType.LINE_COMMENT)('// no runtime check needed for upcast')
        PsiElement(DlangTokenType.})('}')