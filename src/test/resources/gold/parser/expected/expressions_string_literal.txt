D Language File
  FUNCTION_DECLARATION
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.void)('void')
    IDENTIFIER
      PsiElement(DlangTokenType.ID)('foo')
    DLanguageParametersImpl(PARAMETERS)
      PsiElement(DlangTokenType.()('(')
      PARAMETER
        DLanguageTypeImpl(TYPE)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.char)('char')
          DLanguageTypeSuffixImpl(TYPE_SUFFIX)
            PsiElement(DlangTokenType.[)('[')
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.INTEGER_LITERAL)('2')
            PsiElement(DlangTokenType.])(']')
        IDENTIFIER
          PsiElement(DlangTokenType.ID)('a')
      PsiElement(DlangTokenType.))(')')
    DLanguageSpecifiedFunctionBodyImpl(SPECIFIED_FUNCTION_BODY)
      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
        PsiElement(DlangTokenType.{)('{')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
            PsiElement(DlangTokenType.assert)('assert')
            PsiElement(DlangTokenType.()('(')
            DLanguageAssertArgumentsImpl(ASSERT_ARGUMENTS)
              DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DlangTokenType.ID)('a')
                PsiElement(DlangTokenType.==)('==')
                DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                  PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"bc"')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.;)(';')
        PsiElement(DlangTokenType.})('}')
  FUNCTION_DECLARATION
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.void)('void')
    IDENTIFIER
      PsiElement(DlangTokenType.ID)('bar')
    DLanguageParametersImpl(PARAMETERS)
      PsiElement(DlangTokenType.()('(')
      PARAMETER
        PsiElement(DlangTokenType.ref)('ref')
        PsiElement(DlangTokenType.const)('const')
        DLanguageTypeImpl(TYPE)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.char)('char')
          DLanguageTypeSuffixImpl(TYPE_SUFFIX)
            PsiElement(DlangTokenType.[)('[')
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.INTEGER_LITERAL)('2')
            PsiElement(DlangTokenType.])(']')
        IDENTIFIER
          PsiElement(DlangTokenType.ID)('a')
      PsiElement(DlangTokenType.))(')')
    DLanguageSpecifiedFunctionBodyImpl(SPECIFIED_FUNCTION_BODY)
      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
        PsiElement(DlangTokenType.{)('{')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageAssertExpressionImpl(ASSERT_EXPRESSION)
            PsiElement(DlangTokenType.assert)('assert')
            PsiElement(DlangTokenType.()('(')
            DLanguageAssertArgumentsImpl(ASSERT_ARGUMENTS)
              DLanguageEqualExpressionImpl(EQUAL_EXPRESSION)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DlangTokenType.ID)('a')
                PsiElement(DlangTokenType.==)('==')
                DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                  PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"bc"')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.;)(';')
        PsiElement(DlangTokenType.})('}')
  FUNCTION_DECLARATION
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.void)('void')
    IDENTIFIER
      PsiElement(DlangTokenType.ID)('baz')
    DLanguageParametersImpl(PARAMETERS)
      PsiElement(DlangTokenType.()('(')
      PARAMETER
        PsiElement(DlangTokenType.const)('const')
        DLanguageTypeImpl(TYPE)
          DLanguageBasicTypeImpl(BASIC_TYPE)
            DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
              PsiElement(DlangTokenType.char)('char')
          DLanguageTypeSuffixImpl(TYPE_SUFFIX)
            PsiElement(DlangTokenType.[)('[')
            DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
              PsiElement(DlangTokenType.INTEGER_LITERAL)('3')
            PsiElement(DlangTokenType.])(']')
        IDENTIFIER
          PsiElement(DlangTokenType.ID)('a')
      PsiElement(DlangTokenType.))(')')
    DLanguageSpecifiedFunctionBodyImpl(SPECIFIED_FUNCTION_BODY)
      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
        PsiElement(DlangTokenType.{)('{')
        PsiElement(DlangTokenType.})('}')
  FUNCTION_DECLARATION
    DLanguageBasicTypeImpl(BASIC_TYPE)
      DLanguageBuiltinTypeImpl(BUILTIN_TYPE)
        PsiElement(DlangTokenType.void)('void')
    IDENTIFIER
      PsiElement(DlangTokenType.ID)('main')
    DLanguageParametersImpl(PARAMETERS)
      PsiElement(DlangTokenType.()('(')
      PsiElement(DlangTokenType.))(')')
    DLanguageSpecifiedFunctionBodyImpl(SPECIFIED_FUNCTION_BODY)
      DLanguageBlockStatementImpl(BLOCK_STATEMENT)
        PsiElement(DlangTokenType.{)('{')
        DLanguageDeclarationStatementImpl(DECLARATION_STATEMENT)
          DLanguageSpecifiedVariableDeclarationImpl(VARIABLE_DECLARATION)
            DLanguageBasicTypeImpl(BASIC_TYPE)
              DLanguageQualifiedIdentifierImpl(QUALIFIED_IDENTIFIER)
                IDENTIFIER
                  PsiElement(DlangTokenType.ID)('string')
            IDENTIFIER_INITIALIZER
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('str')
              PsiElement(DlangTokenType.=)('=')
              DLanguageInitializerImpl(INITIALIZER)
                DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                  PsiElement(DlangTokenType.DOUBLE_QUOTED_STRING)('"abc"')
            PsiElement(DlangTokenType.;)(';')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageFunctionCallExpressionImpl(FUNCTION_CALL_EXPRESSION)
            DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('foo')
            PsiElement(DlangTokenType.()('(')
            DLanguageArgumentListImpl(ARGUMENT_LIST)
              DLanguageArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DlangTokenType.ID)('str')
                DLanguageIndexExpressionImpl(INDEX_EXPRESSION)
                  PsiElement(DlangTokenType.[)('[')
                  DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                    PsiElement(DlangTokenType.INTEGER_LITERAL)('1')
                  PsiElement(DlangTokenType...)('..')
                  DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                    PsiElement(DlangTokenType.INTEGER_LITERAL)('3')
                  PsiElement(DlangTokenType.])(']')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.;)(';')
        DLanguageExpressionStatementImpl(EXPRESSION_STATEMENT)
          DLanguageFunctionCallExpressionImpl(FUNCTION_CALL_EXPRESSION)
            DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
              IDENTIFIER
                PsiElement(DlangTokenType.ID)('bar')
            PsiElement(DlangTokenType.()('(')
            DLanguageArgumentListImpl(ARGUMENT_LIST)
              DLanguageArrayAccessExpressionImpl(ARRAY_ACCESS_EXPRESSION)
                DLanguageReferenceExpressionImpl(REFERENCE_EXPRESSION)
                  IDENTIFIER
                    PsiElement(DlangTokenType.ID)('str')
                DLanguageIndexExpressionImpl(INDEX_EXPRESSION)
                  PsiElement(DlangTokenType.[)('[')
                  DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                    PsiElement(DlangTokenType.INTEGER_LITERAL)('1')
                  PsiElement(DlangTokenType...)('..')
                  DLanguageLiteralExpressionImpl(LITERAL_EXPRESSION)
                    PsiElement(DlangTokenType.INTEGER_LITERAL)('3')
                  PsiElement(DlangTokenType.])(']')
            PsiElement(DlangTokenType.))(')')
          PsiElement(DlangTokenType.;)(';')
        PsiComment(DlangTokenType.LINE_COMMENT)('//baz(str[1 .. 3]); // cannot match length')
        PsiElement(DlangTokenType.})('}')