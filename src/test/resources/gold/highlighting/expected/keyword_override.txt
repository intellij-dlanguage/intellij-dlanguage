DlangTokenType.class ('class')
WHITE_SPACE (' ')
DlangTokenType.ID ('Foo')
WHITE_SPACE ('\n')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('bar')
DlangTokenType.( ('(')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('abc')
DlangTokenType.( ('(')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('x')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
DlangTokenType.} ('}')
WHITE_SPACE ('\n\n')
DlangTokenType.class ('class')
WHITE_SPACE (' ')
DlangTokenType.ID ('Foo2')
WHITE_SPACE (' ')
DlangTokenType.: (':')
WHITE_SPACE (' ')
DlangTokenType.ID ('Foo')
WHITE_SPACE ('\n')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.override ('override')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('bar')
DlangTokenType.( ('(')
DlangTokenType.char ('char')
WHITE_SPACE (' ')
DlangTokenType.ID ('c')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE (' ')
DlangTokenType.LINE_COMMENT ('// error, no bar(char) in Foo')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('abc')
DlangTokenType.( ('(')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('x')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('  ')
DlangTokenType.LINE_COMMENT ('// ok')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
DlangTokenType.} ('}')
WHITE_SPACE ('\n')
DlangTokenType.} ('}')