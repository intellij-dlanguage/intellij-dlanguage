KEYWORD ('import')
WHITE_SPACE (' ')
DlangTokenType.ID ('std')
DOT ('.')
DlangTokenType.ID ('stdio')
SEMICOLON (';')
WHITE_SPACE ('\n\n')
KEYWORD ('void')
WHITE_SPACE (' ')
DlangTokenType.ID ('main')
PARENTHESES_LEFT ('(')
PARENTHESES_RIGHT (')')
BRACES_LEFT ('{')
WHITE_SPACE ('\n\n')
KEYWORD ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('number')
SEMICOLON (';')
WHITE_SPACE ('\n')
KEYWORD ('string')
WHITE_SPACE (' ')
DlangTokenType.ID ('message')
SEMICOLON (';')
WHITE_SPACE ('\n')
KEYWORD ('switch')
WHITE_SPACE (' ')
PARENTHESES_LEFT ('(')
DlangTokenType.ID ('number')
PARENTHESES_RIGHT (')')
WHITE_SPACE ('\n')
BRACES_LEFT ('{')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
KEYWORD ('default')
OPERATOR (':')
WHITE_SPACE ('    ')
DlangTokenType.LINE_COMMENT ('// valid: ends with 'throw'')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
KEYWORD ('throw')
WHITE_SPACE (' ')
KEYWORD ('new')
WHITE_SPACE (' ')
DlangTokenType.ID ('Exception')
PARENTHESES_LEFT ('(')
DlangTokenType.DOUBLE_QUOTED_STRING ('"unknown number"')
PARENTHESES_RIGHT (')')
SEMICOLON (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
KEYWORD ('case')
WHITE_SPACE (' ')
NUMBER ('3')
OPERATOR (':')
WHITE_SPACE ('     ')
DlangTokenType.LINE_COMMENT ('// valid: ends with 'break' (break out of the 'switch' only)')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DlangTokenType.ID ('message')
WHITE_SPACE (' ')
OPERATOR ('~=')
WHITE_SPACE (' ')
DlangTokenType.DOUBLE_QUOTED_STRING ('"three "')
SEMICOLON (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
KEYWORD ('break')
SEMICOLON (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
KEYWORD ('case')
WHITE_SPACE (' ')
NUMBER ('4')
OPERATOR (':')
WHITE_SPACE ('     ')
DlangTokenType.LINE_COMMENT ('// valid: ends with 'continue' (continue the enclosing loop)')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DlangTokenType.ID ('message')
WHITE_SPACE (' ')
OPERATOR ('~=')
WHITE_SPACE (' ')
DlangTokenType.DOUBLE_QUOTED_STRING ('"four "')
SEMICOLON (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
KEYWORD ('continue')
SEMICOLON (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
KEYWORD ('case')
WHITE_SPACE (' ')
NUMBER ('5')
OPERATOR (':')
WHITE_SPACE ('     ')
DlangTokenType.LINE_COMMENT ('// valid: ends with 'goto' (explicit fall-through to next case.)')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DlangTokenType.ID ('message')
WHITE_SPACE (' ')
OPERATOR ('~=')
WHITE_SPACE (' ')
DlangTokenType.DOUBLE_QUOTED_STRING ('"five "')
SEMICOLON (';')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
KEYWORD ('goto')
WHITE_SPACE (' ')
KEYWORD ('case')
SEMICOLON (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
KEYWORD ('case')
WHITE_SPACE (' ')
NUMBER ('6')
OPERATOR (':')
WHITE_SPACE ('     ')
DlangTokenType.LINE_COMMENT ('// ERROR: implicit fall-through')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DlangTokenType.ID ('message')
WHITE_SPACE (' ')
OPERATOR ('~=')
WHITE_SPACE (' ')
DlangTokenType.DOUBLE_QUOTED_STRING ('"six "')
SEMICOLON (';')
WHITE_SPACE ('\n\n')
WHITE_SPACE ('    ')
KEYWORD ('case')
WHITE_SPACE (' ')
NUMBER ('1')
OPERATOR (':')
WHITE_SPACE ('     ')
DlangTokenType.LINE_COMMENT ('// valid: the body is empty')
WHITE_SPACE ('\n')
WHITE_SPACE ('    ')
KEYWORD ('case')
WHITE_SPACE (' ')
NUMBER ('2')
OPERATOR (':')
WHITE_SPACE ('     ')
DlangTokenType.LINE_COMMENT ('// valid: this is the last case in the switch statement.')
WHITE_SPACE ('\n')
WHITE_SPACE ('        ')
DlangTokenType.ID ('message')
WHITE_SPACE (' ')
OPERATOR ('=')
WHITE_SPACE (' ')
DlangTokenType.DOUBLE_QUOTED_STRING ('"one or two"')
SEMICOLON (';')
WHITE_SPACE ('\n')
BRACES_RIGHT ('}')
WHITE_SPACE ('\n\n')
BRACES_RIGHT ('}')