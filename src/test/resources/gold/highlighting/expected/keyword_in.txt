DlangTokenType.long ('long')
WHITE_SPACE (' ')
DlangTokenType.ID ('square_root')
DlangTokenType.( ('(')
DlangTokenType.long ('long')
WHITE_SPACE (' ')
DlangTokenType.ID ('x')
DlangTokenType.) (')')
WHITE_SPACE ('\n')
DlangTokenType.in ('in')
WHITE_SPACE ('\n')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n    ')
DlangTokenType.assert ('assert')
DlangTokenType.( ('(')
DlangTokenType.ID ('x')
WHITE_SPACE (' ')
DlangTokenType.>= ('>=')
WHITE_SPACE (' ')
DlangTokenType.INTEGER_LITERAL ('0')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
DlangTokenType.} ('}')
WHITE_SPACE ('\n')
DlangTokenType.out ('out')
WHITE_SPACE (' ')
DlangTokenType.( ('(')
DlangTokenType.ID ('result')
DlangTokenType.) (')')
WHITE_SPACE ('\n')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n    ')
DlangTokenType.assert ('assert')
DlangTokenType.( ('(')
DlangTokenType.( ('(')
DlangTokenType.ID ('result')
WHITE_SPACE (' ')
DlangTokenType.* ('*')
WHITE_SPACE (' ')
DlangTokenType.ID ('result')
DlangTokenType.) (')')
WHITE_SPACE (' ')
DlangTokenType.<= ('<=')
WHITE_SPACE (' ')
DlangTokenType.ID ('x')
WHITE_SPACE (' ')
DlangTokenType.&& ('&&')
WHITE_SPACE (' ')
DlangTokenType.( ('(')
DlangTokenType.ID ('result')
DlangTokenType.+ ('+')
DlangTokenType.INTEGER_LITERAL ('1')
DlangTokenType.) (')')
WHITE_SPACE (' ')
DlangTokenType.* ('*')
WHITE_SPACE (' ')
DlangTokenType.( ('(')
DlangTokenType.ID ('result')
DlangTokenType.+ ('+')
DlangTokenType.INTEGER_LITERAL ('1')
DlangTokenType.) (')')
WHITE_SPACE (' ')
DlangTokenType.> ('>')
WHITE_SPACE (' ')
DlangTokenType.ID ('x')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
DlangTokenType.} ('}')
WHITE_SPACE ('\n')
DlangTokenType.do ('do')
WHITE_SPACE ('\n')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n    ')
DlangTokenType.return ('return')
WHITE_SPACE (' ')
DlangTokenType.cast ('cast')
DlangTokenType.( ('(')
DlangTokenType.long ('long')
DlangTokenType.) (')')
DlangTokenType.ID ('std')
DlangTokenType.. ('.')
DlangTokenType.ID ('math')
DlangTokenType.. ('.')
DlangTokenType.ID ('sqrt')
DlangTokenType.( ('(')
DlangTokenType.cast ('cast')
DlangTokenType.( ('(')
DlangTokenType.real ('real')
DlangTokenType.) (')')
DlangTokenType.ID ('x')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
DlangTokenType.} ('}')
WHITE_SPACE ('\n\n')
DlangTokenType.int ('int')
WHITE_SPACE (' ')
DlangTokenType.ID ('test')
DlangTokenType.( ('(')
DlangTokenType.int ('int')
DlangTokenType.[ ('[')
DlangTokenType.ID ('string')
DlangTokenType.] (']')
WHITE_SPACE (' ')
DlangTokenType.ID ('input')
DlangTokenType.) (')')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n    ')
DlangTokenType.if ('if')
DlangTokenType.( ('(')
DlangTokenType.DOUBLE_QUOTED_STRING ('""')
WHITE_SPACE (' ')
DlangTokenType.in ('in')
WHITE_SPACE (' ')
DlangTokenType.ID ('input')
DlangTokenType.) (')')
DlangTokenType.{ ('{')
WHITE_SPACE ('\n        ')
DlangTokenType.return ('return')
WHITE_SPACE (' ')
DlangTokenType.! ('!')
DlangTokenType.ID ('inSomeTemplateThingThatStartsWithIn')
DlangTokenType.! ('!')
DlangTokenType.( ('(')
DlangTokenType.DOUBLE_QUOTED_STRING ('""')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('\n    ')
DlangTokenType.} ('}')
WHITE_SPACE ('\n    ')
DlangTokenType.return ('return')
WHITE_SPACE (' ')
DlangTokenType.ID ('inSomeTemplateThingThatStartsWithIn')
DlangTokenType.! ('!')
DlangTokenType.( ('(')
DlangTokenType.DOUBLE_QUOTED_STRING ('""')
DlangTokenType.) (')')
DlangTokenType.; (';')
WHITE_SPACE ('\n')
DlangTokenType.} ('}')